-- MySQL dump 10.13  Distrib 8.0.35, for Linux (x86_64)
--
-- Host: 82.180.162.18    Database: axe
-- ------------------------------------------------------
-- Server version	8.0.35-0ubuntu0.23.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Current Database: `axe`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `axe` /*!40100 DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci */ /*!80016 DEFAULT ENCRYPTION='N' */;

USE `axe`;

--
-- Table structure for table `BITACORA`
--

DROP TABLE IF EXISTS `BITACORA`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `BITACORA` (
  `COD_BITACORA` int NOT NULL AUTO_INCREMENT,
  `NOMBRE_TABLA` varchar(50) DEFAULT NULL,
  `MODULO_TABLA` varchar(50) DEFAULT NULL,
  `TIPO_EVENTO` varchar(20) DEFAULT NULL,
  `FECHA_REGISTRO` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `FECHA_MODIFICACION` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `USUARIO` varchar(50) DEFAULT NULL,
  `COD_REGISTRO_TABLA` varchar(200) DEFAULT NULL,
  `PRIMERA_FK` varchar(200) DEFAULT NULL,
  `SEGUNDA_FK` varchar(200) DEFAULT NULL,
  `TERCERA_FK` varchar(200) DEFAULT NULL,
  `CAMPO1_VIEJO` varchar(200) DEFAULT NULL,
  `CAMPO2_VIEJO` varchar(200) DEFAULT NULL,
  `CAMPO3_VIEJO` varchar(200) DEFAULT NULL,
  `CAMPO4_VIEJO` varchar(200) DEFAULT NULL,
  `CAMPO5_VIEJO` varchar(200) DEFAULT NULL,
  `CAMPO6_VIEJO` varchar(200) DEFAULT NULL,
  `CAMPO7_VIEJO` varchar(200) DEFAULT NULL,
  `CAMPO8_VIEJO` varchar(200) DEFAULT NULL,
  `CAMPO9_VIEJO` varchar(200) DEFAULT NULL,
  `CAMPO10_NUEVO` varchar(200) DEFAULT NULL,
  `CAMPO11_NUEVO` varchar(200) DEFAULT NULL,
  `CAMPO12_NUEVO` varchar(200) DEFAULT NULL,
  `CAMPO13_NUEVO` varchar(200) DEFAULT NULL,
  `CAMPO14_NUEVO` varchar(200) DEFAULT NULL,
  `CAMPO15_NUEVO` varchar(200) DEFAULT NULL,
  `CAMPO16_NUEVO` varchar(200) DEFAULT NULL,
  `CAMPO17_NUEVO` varchar(200) DEFAULT NULL,
  `CAMPO18_NUEVO` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`COD_BITACORA`)
) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `BITACORA`
--

LOCK TABLES `BITACORA` WRITE;
/*!40000 ALTER TABLE `BITACORA` DISABLE KEYS */;
INSERT INTO `BITACORA` VALUES (1,'MS_USUARIOS','MODULO SEGURIDAD','UPDATE',NULL,'2023-12-02 00:58:28',NULL,'1','5','1',NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL),(2,'MS_USUARIOS','MODULO SEGURIDAD','UPDATE',NULL,'2023-12-02 00:58:28',NULL,'1','5','1',NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL),(3,'MS_USUARIOS','MODULO SEGURIDAD','UPDATE',NULL,'2023-12-02 03:09:18',NULL,'1','5','1',NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL),(4,'MS_USUARIOS','MODULO SEGURIDAD','UPDATE',NULL,'2023-12-02 03:09:18',NULL,'1','5','1',NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL),(5,'MS_USUARIOS','MODULO SEGURIDAD','UPDATE',NULL,'2023-12-02 03:22:10',NULL,'1','5','1',NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL),(6,'MS_USUARIOS','MODULO SEGURIDAD','UPDATE',NULL,'2023-12-02 03:22:10',NULL,'1','5','1',NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL),(7,'MS_USUARIOS','MODULO SEGURIDAD','UPDATE',NULL,'2023-12-02 04:07:26',NULL,'1','5','1',NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL),(8,'MS_USUARIOS','MODULO SEGURIDAD','UPDATE',NULL,'2023-12-02 04:07:26',NULL,'1','5','1',NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL),(9,'MS_USUARIOS','MODULO SEGURIDAD','UPDATE',NULL,'2023-12-02 04:20:10',NULL,'1','5','1',NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL),(10,'MS_USUARIOS','MODULO SEGURIDAD','UPDATE',NULL,'2023-12-02 04:20:10',NULL,'1','5','1',NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL),(11,'MS_USUARIOS','MODULO SEGURIDAD','UPDATE',NULL,'2023-12-02 04:24:16',NULL,'1','5','1',NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL),(12,'MS_USUARIOS','MODULO SEGURIDAD','UPDATE',NULL,'2023-12-02 04:24:16',NULL,'1','5','1',NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL),(13,'MS_USUARIOS','MODULO SEGURIDAD','UPDATE',NULL,'2023-12-02 05:11:31',NULL,'1','5','1',NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL),(14,'MS_USUARIOS','MODULO SEGURIDAD','UPDATE',NULL,'2023-12-02 05:11:31',NULL,'1','5','1',NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL),(15,'MS_USUARIOS','MODULO SEGURIDAD','UPDATE',NULL,'2023-12-02 05:26:23',NULL,'1','5','1',NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL),(16,'MS_USUARIOS','MODULO SEGURIDAD','UPDATE',NULL,'2023-12-02 05:26:23',NULL,'1','5','1',NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL),(17,'MS_USUARIOS','MODULO SEGURIDAD','UPDATE',NULL,'2023-12-02 06:02:19',NULL,'1','5','1',NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL),(18,'MS_USUARIOS','MODULO SEGURIDAD','UPDATE',NULL,'2023-12-02 06:02:19',NULL,'1','5','1',NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL),(19,'MS_USUARIOS','MODULO SEGURIDAD','UPDATE',NULL,'2023-12-02 06:16:09',NULL,'1','5','1',NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL),(20,'MS_USUARIOS','MODULO SEGURIDAD','UPDATE',NULL,'2023-12-02 06:16:09',NULL,'1','5','1',NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL,'JOSUE','......','0',NULL,NULL,NULL,NULL,NULL,NULL);
/*!40000 ALTER TABLE `BITACORA` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `MA_ANIO_ACADEMICO`
--

DROP TABLE IF EXISTS `MA_ANIO_ACADEMICO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MA_ANIO_ACADEMICO` (
  `COD_ANIO_ACADEMICO` bigint NOT NULL AUTO_INCREMENT,
  `descripcion` varchar(100) DEFAULT NULL,
  `Estado_registro` int DEFAULT '1',
  PRIMARY KEY (`COD_ANIO_ACADEMICO`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `MA_ANIO_ACADEMICO`
--

LOCK TABLES `MA_ANIO_ACADEMICO` WRITE;
/*!40000 ALTER TABLE `MA_ANIO_ACADEMICO` DISABLE KEYS */;
INSERT INTO `MA_ANIO_ACADEMICO` VALUES (1,'SÃ©ptimo',1),(2,'Octavo',1),(3,'Noveno',1),(4,'Undecimo',1),(5,'Duodecimo',1),(6,'Decimo up',0);
/*!40000 ALTER TABLE `MA_ANIO_ACADEMICO` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_unicode_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`axe`@`%`*/ /*!50003 TRIGGER `TRIGGER_BITACORA_UPDATE_MA_ANIO_ACADEMICO1` AFTER UPDATE ON `MA_ANIO_ACADEMICO` FOR EACH ROW BEGIN
    -- INSERTAR LOS VALORES ANTIGUOS Y NUEVOS EN LA TABLA BITACORA
    INSERT INTO BITACORA (
        NOMBRE_TABLA, MODULO_TABLA, TIPO_EVENTO, FECHA_MODIFICACION, 
        COD_REGISTRO_TABLA, PRIMERA_FK, SEGUNDA_FK, TERCERA_FK, CAMPO1_VIEJO, CAMPO2_VIEJO, CAMPO3_VIEJO, CAMPO4_VIEJO, CAMPO5_VIEJO, CAMPO6_VIEJO,
        CAMPO7_VIEJO, CAMPO8_VIEJO, CAMPO9_VIEJO, CAMPO10_NUEVO, CAMPO11_NUEVO, CAMPO12_NUEVO,
        CAMPO13_NUEVO, CAMPO14_NUEVO, CAMPO15_NUEVO, CAMPO16_NUEVO, CAMPO17_NUEVO, CAMPO18_NUEVO
    )
    VALUES (
        'MA_ANIO_ACADEMICO', 'MODULO ACADEMICO', 'UPDATE', NOW(),
        OLD.COD_ANIO_ACADEMICO, NULL, NULL, NULL, OLD.descripcion, OLD.Estado_registro, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
        NEW.descripcion, NEW.Estado_registro, NULL, NULL, NULL, NULL, NULL, NULL, NULL
    );
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `MA_ASIGNATURAS`
--

DROP TABLE IF EXISTS `MA_ASIGNATURAS`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MA_ASIGNATURAS` (
  `COD_ASIGNATURA` bigint NOT NULL AUTO_INCREMENT,
  `NOMBRE_ASIGNATURA` varchar(100) DEFAULT NULL,
  `Estado_registro` int DEFAULT '1',
  PRIMARY KEY (`COD_ASIGNATURA`),
  UNIQUE KEY `NOMBRE_ASIGNATURA_UNIQUE` (`NOMBRE_ASIGNATURA`)
) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `MA_ASIGNATURAS`
--

LOCK TABLES `MA_ASIGNATURAS` WRITE;
/*!40000 ALTER TABLE `MA_ASIGNATURAS` DISABLE KEYS */;
INSERT INTO `MA_ASIGNATURAS` VALUES (11,'InglÃ©ss',0),(12,'Quimica',1),(13,'MatemÃ¡ticas',1),(14,'Sociales',1),(15,'FilosofÃ­a',1),(16,'EducaciÃ³n Artistica',0),(17,'QuÃ­mica 10',1),(19,'EspaÃ±ol',1);
/*!40000 ALTER TABLE `MA_ASIGNATURAS` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_unicode_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`axe`@`%`*/ /*!50003 TRIGGER `TRIGGER_BITACORA_UPDATE_MA_ASIGNATURAS1` AFTER UPDATE ON `MA_ASIGNATURAS` FOR EACH ROW BEGIN
    -- INSERTAR LOS VALORES ANTIGUOS Y NUEVOS EN LA TABLA BITACORA
    INSERT INTO BITACORA (
        NOMBRE_TABLA, MODULO_TABLA, TIPO_EVENTO, FECHA_MODIFICACION, 
        COD_REGISTRO_TABLA, PRIMERA_FK, SEGUNDA_FK, TERCERA_FK, CAMPO1_VIEJO, CAMPO2_VIEJO, CAMPO3_VIEJO, CAMPO4_VIEJO, CAMPO5_VIEJO, CAMPO6_VIEJO,
        CAMPO7_VIEJO, CAMPO8_VIEJO, CAMPO9_VIEJO, CAMPO10_NUEVO, CAMPO11_NUEVO, CAMPO12_NUEVO,
        CAMPO13_NUEVO, CAMPO14_NUEVO, CAMPO15_NUEVO, CAMPO16_NUEVO, CAMPO17_NUEVO, CAMPO18_NUEVO
    )
    VALUES (
        'MA_ASIGNATURAS', 'MODULO ACADEMICO', 'UPDATE', NOW(),
        OLD.COD_ASIGNATURA, NULL, NULL, NULL, OLD.NOMBRE_ASIGNATURA, OLD.Estado_registro, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
        NEW.NOMBRE_ASIGNATURA, NEW.Estado_registro, NULL, NULL, NULL, NULL, NULL, NULL, NULL
    );
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `MA_JORNADA`
--

DROP TABLE IF EXISTS `MA_JORNADA`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MA_JORNADA` (
  `COD_JORNADA` bigint NOT NULL AUTO_INCREMENT,
  `DESCRIPCION_JOR` varchar(100) DEFAULT NULL,
  `Estado_registro` int DEFAULT '1',
  PRIMARY KEY (`COD_JORNADA`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `MA_JORNADA`
--

LOCK TABLES `MA_JORNADA` WRITE;
/*!40000 ALTER TABLE `MA_JORNADA` DISABLE KEYS */;
INSERT INTO `MA_JORNADA` VALUES (7,'Nocturna',1),(8,'Matutina',1),(9,'Matutina',1),(10,'Nocturna',1),(11,'Vespertina Up',1);
/*!40000 ALTER TABLE `MA_JORNADA` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `MA_NIVEL_ACADEMICO`
--

DROP TABLE IF EXISTS `MA_NIVEL_ACADEMICO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MA_NIVEL_ACADEMICO` (
  `COD_NIVEL_ACADEMICO` bigint NOT NULL AUTO_INCREMENT,
  `descripcion` varchar(100) DEFAULT NULL,
  `Estado_registro` int DEFAULT '1',
  PRIMARY KEY (`COD_NIVEL_ACADEMICO`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `MA_NIVEL_ACADEMICO`
--

LOCK TABLES `MA_NIVEL_ACADEMICO` WRITE;
/*!40000 ALTER TABLE `MA_NIVEL_ACADEMICO` DISABLE KEYS */;
INSERT INTO `MA_NIVEL_ACADEMICO` VALUES (1,'Ciclo Comun',1),(2,'Bachillerato Informatica',1),(3,'Bachillerato Finanzas',1),(4,'Bachillerato Finanzas',1),(5,'Bachillerato Ciencias y Humanidades',1),(6,'Bachillerato en ContadurÃ­a',0);
/*!40000 ALTER TABLE `MA_NIVEL_ACADEMICO` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_unicode_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`axe`@`%`*/ /*!50003 TRIGGER `TRIGGER_BITACORA_UPDATE_MA_NIVEL_ACADEMICO1` AFTER UPDATE ON `MA_NIVEL_ACADEMICO` FOR EACH ROW BEGIN
    -- INSERTAR LOS VALORES ANTIGUOS Y NUEVOS EN LA TABLA BITACORA
    INSERT INTO BITACORA (
        NOMBRE_TABLA, MODULO_TABLA, TIPO_EVENTO, FECHA_MODIFICACION, 
        COD_REGISTRO_TABLA, PRIMERA_FK, SEGUNDA_FK, TERCERA_FK, CAMPO1_VIEJO, CAMPO2_VIEJO, CAMPO3_VIEJO, CAMPO4_VIEJO, CAMPO5_VIEJO, CAMPO6_VIEJO,
        CAMPO7_VIEJO, CAMPO8_VIEJO, CAMPO9_VIEJO, CAMPO10_NUEVO, CAMPO11_NUEVO, CAMPO12_NUEVO,
        CAMPO13_NUEVO, CAMPO14_NUEVO, CAMPO15_NUEVO, CAMPO16_NUEVO, CAMPO17_NUEVO, CAMPO18_NUEVO
    )
    VALUES (
        'MA_NIVEL_ACADEMICO', 'MODULO ACADEMICO', 'UPDATE', NOW(), 
        OLD.COD_NIVEL_ACADEMICO, NULL, NULL, NULL, OLD.descripcion, OLD.Estado_registro, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
        NEW.descripcion, NEW.Estado_registro, NULL, NULL, NULL, NULL, NULL, NULL, NULL
    );
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `MA_REL_ASIGNATURAS`
--

DROP TABLE IF EXISTS `MA_REL_ASIGNATURAS`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MA_REL_ASIGNATURAS` (
  `COD_REL_ASIG` bigint NOT NULL AUTO_INCREMENT,
  `COD_ASIGNATURA` bigint DEFAULT NULL,
  `COD_NIVACAD_ANIOACAD` varchar(6) DEFAULT NULL,
  PRIMARY KEY (`COD_REL_ASIG`),
  KEY `COD_ASIGNATURA` (`COD_ASIGNATURA`),
  KEY `COD_NIVACAD_ANIOACAD` (`COD_NIVACAD_ANIOACAD`),
  CONSTRAINT `MA_REL_ASIGNATURAS_ibfk_1` FOREIGN KEY (`COD_ASIGNATURA`) REFERENCES `MA_ASIGNATURAS` (`COD_ASIGNATURA`),
  CONSTRAINT `MA_REL_ASIGNATURAS_ibfk_2` FOREIGN KEY (`COD_NIVACAD_ANIOACAD`) REFERENCES `REL_NIVACAD_ANIOACAD` (`COD_NIVACAD_ANIOACAD`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `MA_REL_ASIGNATURAS`
--

LOCK TABLES `MA_REL_ASIGNATURAS` WRITE;
/*!40000 ALTER TABLE `MA_REL_ASIGNATURAS` DISABLE KEYS */;
/*!40000 ALTER TABLE `MA_REL_ASIGNATURAS` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `MA_SECCIONES`
--

DROP TABLE IF EXISTS `MA_SECCIONES`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MA_SECCIONES` (
  `COD_SECCIONES` bigint NOT NULL AUTO_INCREMENT,
  `DESCRIPCION_SECCIONES` varchar(100) DEFAULT NULL,
  `Estado_registro` int DEFAULT '1',
  PRIMARY KEY (`COD_SECCIONES`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `MA_SECCIONES`
--

LOCK TABLES `MA_SECCIONES` WRITE;
/*!40000 ALTER TABLE `MA_SECCIONES` DISABLE KEYS */;
INSERT INTO `MA_SECCIONES` VALUES (1,'Seccion A',1),(2,'Seccion B',1),(3,'Seccion C',0),(4,'Seccion D',0),(5,'SECCION A',1);
/*!40000 ALTER TABLE `MA_SECCIONES` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_unicode_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`axe`@`%`*/ /*!50003 TRIGGER `TRIGGER_BITACORA_UPDATE_MA_SECCIONES1` AFTER UPDATE ON `MA_SECCIONES` FOR EACH ROW BEGIN
    -- INSERTAR LOS VALORES ANTIGUOS Y NUEVOS EN LA TABLA BITACORA
    INSERT INTO BITACORA (
        NOMBRE_TABLA, MODULO_TABLA, TIPO_EVENTO,  FECHA_MODIFICACION, 
        COD_REGISTRO_TABLA, PRIMERA_FK, SEGUNDA_FK, TERCERA_FK, CAMPO1_VIEJO, CAMPO2_VIEJO, CAMPO3_VIEJO, CAMPO4_VIEJO, CAMPO5_VIEJO, CAMPO6_VIEJO,
        CAMPO7_VIEJO, CAMPO8_VIEJO, CAMPO9_VIEJO, CAMPO10_NUEVO, CAMPO11_NUEVO, CAMPO12_NUEVO,
        CAMPO13_NUEVO, CAMPO14_NUEVO, CAMPO15_NUEVO, CAMPO16_NUEVO, CAMPO17_NUEVO, CAMPO18_NUEVO
    )
    VALUES (
        'MA_SECCIONES', 'MODULO ACADEMICO', 'UPDATE', NOW(), 
        OLD.COD_SECCIONES, NULL, NULL, NULL, OLD.DESCRIPCION_SECCIONES, OLD.Estado_registro, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
        NEW.DESCRIPCION_SECCIONES, NEW.Estado_registro, NULL, NULL, NULL, NULL, NULL, NULL, NULL
    );
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `MDA_DOCENTES_ASIGNATURAS`
--

DROP TABLE IF EXISTS `MDA_DOCENTES_ASIGNATURAS`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MDA_DOCENTES_ASIGNATURAS` (
  `COD_DOCENTE_ASIGNATURA` bigint NOT NULL AUTO_INCREMENT,
  `COD_DOCENTE` bigint NOT NULL,
  `COD_ASIGNATURA` bigint NOT NULL,
  `HORAS_SEMANALES` bigint DEFAULT NULL,
  `USUARIO_MODIFICADOR` varchar(50) DEFAULT NULL,
  `FECHA_REGISTRO` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `Estado_registro` int DEFAULT '1',
  PRIMARY KEY (`COD_DOCENTE_ASIGNATURA`),
  KEY `COD_ASIGNATURA` (`COD_ASIGNATURA`),
  KEY `COD_DOCENTE` (`COD_DOCENTE`),
  CONSTRAINT `MDA_DOCENTES_ASIGNATURAS_ibfk_1` FOREIGN KEY (`COD_ASIGNATURA`) REFERENCES `MA_ASIGNATURAS` (`COD_ASIGNATURA`),
  CONSTRAINT `MDA_DOCENTES_ASIGNATURAS_ibfk_2` FOREIGN KEY (`COD_DOCENTE`) REFERENCES `MD_DOCENTES` (`COD_DOCENTE`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `MDA_DOCENTES_ASIGNATURAS`
--

LOCK TABLES `MDA_DOCENTES_ASIGNATURAS` WRITE;
/*!40000 ALTER TABLE `MDA_DOCENTES_ASIGNATURAS` DISABLE KEYS */;
INSERT INTO `MDA_DOCENTES_ASIGNATURAS` VALUES (11,24,12,40,'JOSUE','2023-11-28 04:36:27',1),(12,24,19,40,'JOSUE','2023-11-28 05:39:29',1),(13,24,19,40,'JOSUE','2023-11-28 05:43:23',0);
/*!40000 ALTER TABLE `MDA_DOCENTES_ASIGNATURAS` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_unicode_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`axe`@`%`*/ /*!50003 TRIGGER `TRIGGER_BITACORA_UPDATE_MDA_DOCENTES_ASIGNATURAS1` AFTER UPDATE ON `MDA_DOCENTES_ASIGNATURAS` FOR EACH ROW BEGIN
    -- INSERTAR LOS VALORES ANTIGUOS Y NUEVOS EN LA TABLA BITACORA
    INSERT INTO BITACORA (
      NOMBRE_TABLA, MODULO_TABLA, TIPO_EVENTO, FECHA_REGISTRO, FECHA_MODIFICACION, USUARIO,
        COD_REGISTRO_TABLA, PRIMERA_FK, SEGUNDA_FK, TERCERA_FK, CAMPO1_VIEJO, CAMPO2_VIEJO, CAMPO3_VIEJO, CAMPO4_VIEJO, CAMPO5_VIEJO, CAMPO6_VIEJO,
        CAMPO7_VIEJO, CAMPO8_VIEJO, CAMPO9_VIEJO, CAMPO10_NUEVO, CAMPO11_NUEVO, CAMPO12_NUEVO,
        CAMPO13_NUEVO, CAMPO14_NUEVO, CAMPO15_NUEVO, CAMPO16_NUEVO, CAMPO17_NUEVO, CAMPO18_NUEVO
    )
    VALUES (
        'MDA_DOCENTES_ASIGNATURAS ', 'MODULO DOCENTE', 'UPDATE', OLD. FECHA_REGISTRO, NOW(), NEW.USUARIO_MODIFICADOR,
        OLD.COD_DOCENTE_ASIGNATURA, OLD.COD_DOCENTE, OLD.COD_ASIGNATURA, NULL, OLD.HORAS_SEMANALES, NULL, NULL, NULL,
        NULL, NULL, NULL, NULL, NULL, 
        NEW.HORAS_SEMANALES, NULL, NULL, NULL,
        NULL, NULL, NULL, NULL, NULL
    );
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `MD_DOCENTES`
--

DROP TABLE IF EXISTS `MD_DOCENTES`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MD_DOCENTES` (
  `COD_DOCENTE` bigint NOT NULL AUTO_INCREMENT,
  `COD_PERSONA` bigint NOT NULL,
  `NOMBRE_DOCENTE` varchar(255) DEFAULT NULL,
  `ESPECIALIDAD` varchar(100) DEFAULT NULL,
  `GRADO_ENSENIANZA` varchar(50) DEFAULT NULL,
  `USUARIO_MODIFICADOR` varchar(50) DEFAULT NULL,
  `FECHA_REGISTRO` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `Estado_registro` int DEFAULT '1',
  PRIMARY KEY (`COD_DOCENTE`),
  KEY `COD_PERSONA` (`COD_PERSONA`),
  CONSTRAINT `MD_DOCENTES_ibfk_1` FOREIGN KEY (`COD_PERSONA`) REFERENCES `MP_PERSONAS` (`COD_PERSONA`)
) ENGINE=InnoDB AUTO_INCREMENT=25 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `MD_DOCENTES`
--

LOCK TABLES `MD_DOCENTES` WRITE;
/*!40000 ALTER TABLE `MD_DOCENTES` DISABLE KEYS */;
INSERT INTO `MD_DOCENTES` VALUES (22,40,'Monica Rambue','Ciencias','Ciclo comun','','2023-11-11 20:59:39',0),(23,41,'undefined','undefined','undefined','undefined','2023-11-13 15:02:12',0),(24,54,'null','MatemÃ¡ticas discreta','Ciclo Comun','USUARIOFINAL','2023-11-26 14:57:37',1);
/*!40000 ALTER TABLE `MD_DOCENTES` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_unicode_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`axe`@`%`*/ /*!50003 TRIGGER `TRIGGER_BITACORA_UPDATE_MD_DOCENTES1` AFTER UPDATE ON `MD_DOCENTES` FOR EACH ROW BEGIN
    -- INSERTAR LOS VALORES ANTIGUOS Y NUEVOS EN LA TABLA BITACORA
    INSERT INTO BITACORA (
         NOMBRE_TABLA, MODULO_TABLA, TIPO_EVENTO, FECHA_REGISTRO, FECHA_MODIFICACION, USUARIO,
        COD_REGISTRO_TABLA, PRIMERA_FK, SEGUNDA_FK, TERCERA_FK, CAMPO1_VIEJO, CAMPO2_VIEJO, CAMPO3_VIEJO, CAMPO4_VIEJO, CAMPO5_VIEJO, CAMPO6_VIEJO,
        CAMPO7_VIEJO, CAMPO8_VIEJO, CAMPO9_VIEJO, CAMPO10_NUEVO, CAMPO11_NUEVO, CAMPO12_NUEVO,
        CAMPO13_NUEVO, CAMPO14_NUEVO, CAMPO15_NUEVO, CAMPO16_NUEVO, CAMPO17_NUEVO, CAMPO18_NUEVO
    )
    VALUES (
        'MD_DOCENTES', 'MODULO DOCENTE', 'UPDATE', OLD.FECHA_REGISTRO , NOW(), NEW.USUARIO_MODIFICADOR,
        OLD.COD_DOCENTE, OLD.COD_PERSONA, NULL, NULL, OLD.NOMBRE_DOCENTE,OLD.ESPECIALIDAD, OLD.GRADO_ENSENIANZA,NULL,
        NULL, NULL, NULL, NULL, NULL, 
         NEW.NOMBRE_DOCENTE, NEW.ESPECIALIDAD, NEW.GRADO_ENSENIANZA, NULL,
        NULL, NULL, NULL, NULL, NULL 
    );
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `ME_ESTUDIANTES`
--

DROP TABLE IF EXISTS `ME_ESTUDIANTES`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `ME_ESTUDIANTES` (
  `COD_ESTUDIANTE` bigint NOT NULL AUTO_INCREMENT,
  `COD_PERSONA` bigint DEFAULT NULL,
  `COD_NIVEL_ACADEMICO` bigint DEFAULT NULL,
  `COD_PADRE_TUTOR` bigint DEFAULT NULL,
  `NOMBRE_ESTUDIANTE` varchar(100) DEFAULT NULL,
  `APELLIDO_ESTUDIANTE` varchar(100) DEFAULT NULL,
  `JORNADA_ESTUDIANTE` varchar(40) DEFAULT NULL,
  PRIMARY KEY (`COD_ESTUDIANTE`),
  KEY `COD_PERSONA` (`COD_PERSONA`),
  KEY `COD_PADRE_TUTOR` (`COD_PADRE_TUTOR`),
  KEY `ME_ESTUDIANTES_ibfk_2_idx` (`COD_NIVEL_ACADEMICO`),
  CONSTRAINT `ME_ESTUDIANTES_ibfk_1` FOREIGN KEY (`COD_PERSONA`) REFERENCES `MP_PERSONAS` (`COD_PERSONA`),
  CONSTRAINT `ME_ESTUDIANTES_ibfk_2` FOREIGN KEY (`COD_NIVEL_ACADEMICO`) REFERENCES `MA_NIVEL_ACADEMICO` (`COD_NIVEL_ACADEMICO`),
  CONSTRAINT `ME_ESTUDIANTES_ibfk_3` FOREIGN KEY (`COD_PADRE_TUTOR`) REFERENCES `ME_PADRES_TUTORES` (`COD_PADRE_TUTOR`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ME_ESTUDIANTES`
--

LOCK TABLES `ME_ESTUDIANTES` WRITE;
/*!40000 ALTER TABLE `ME_ESTUDIANTES` DISABLE KEYS */;
/*!40000 ALTER TABLE `ME_ESTUDIANTES` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ME_PADRES_TUTORES`
--

DROP TABLE IF EXISTS `ME_PADRES_TUTORES`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `ME_PADRES_TUTORES` (
  `COD_PADRE_TUTOR` bigint NOT NULL AUTO_INCREMENT,
  `COD_PERSONA` bigint DEFAULT NULL,
  `NOMBRE_PADRE_TUTOR` varchar(50) DEFAULT NULL,
  `APELLIDO_PADRE_TUTOR` varchar(50) DEFAULT NULL,
  `OCUPACION_PADRE_TUTOR` varchar(50) DEFAULT NULL,
  `RELACION_PADRE_ESTUDIANTE` varchar(50) DEFAULT NULL,
  `USUARIO_MODIFICADOR` varchar(50) DEFAULT NULL,
  `FECHA_REGISTRO` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `Estado_registro` int DEFAULT '1',
  PRIMARY KEY (`COD_PADRE_TUTOR`),
  KEY `COD_PERSONA` (`COD_PERSONA`),
  CONSTRAINT `ME_PADRES_TUTORES_ibfk_1` FOREIGN KEY (`COD_PERSONA`) REFERENCES `MP_PERSONAS` (`COD_PERSONA`)
) ENGINE=InnoDB AUTO_INCREMENT=26 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ME_PADRES_TUTORES`
--

LOCK TABLES `ME_PADRES_TUTORES` WRITE;
/*!40000 ALTER TABLE `ME_PADRES_TUTORES` DISABLE KEYS */;
INSERT INTO `ME_PADRES_TUTORES` VALUES (22,54,'Armando','Perez Leon','Licenciado','Padre','JOSUE','2023-11-25 21:17:59',0),(23,54,'Armando','Perez Leon','ingeniero','padre','JOSUE','2023-11-26 05:35:00',1),(24,55,'Hector','el bambino','Licenciado','Padre','JOSUE','2023-11-26 05:40:30',1),(25,58,'Tutor Final','Final Final','twert','wetre','JOSUE','2023-11-27 17:22:52',1);
/*!40000 ALTER TABLE `ME_PADRES_TUTORES` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`axe`@`%`*/ /*!50003 TRIGGER `TRIGGER_BITACORA_UPDATE_ME_PADRES_TUTORES` AFTER UPDATE ON `ME_PADRES_TUTORES` FOR EACH ROW BEGIN
    -- INSERTAR LOS VALORES ANTIGUOS Y NUEVOS EN LA TABLA BITACORA
    INSERT INTO BITACORA (
        NOMBRE_TABLA, MODULO_TABLA, TIPO_EVENTO, FECHA_REGISTRO, FECHA_MODIFICACION, USUARIO,
        COD_REGISTRO_TABLA, PRIMERA_FK, SEGUNDA_FK, TERCERA_FK, CAMPO1_VIEJO, CAMPO2_VIEJO, CAMPO3_VIEJO, CAMPO4_VIEJO, CAMPO5_VIEJO, CAMPO6_VIEJO,
        CAMPO7_VIEJO, CAMPO8_VIEJO, CAMPO9_VIEJO, CAMPO10_NUEVO, CAMPO11_NUEVO, CAMPO12_NUEVO,
        CAMPO13_NUEVO, CAMPO14_NUEVO, CAMPO15_NUEVO, CAMPO16_NUEVO, CAMPO17_NUEVO, CAMPO18_NUEVO
    )
    VALUES (
        'ME_PADRES_TUTORES ', 'MODULO ESTUDIANTES', 'UPDATE', OLD.FECHA_REGISTRO, NOW(), NEW.USUARIO_MODIFICADOR,
        OLD.COD_PADRE_TUTOR, OLD.COD_PERSONA, NULL, NULL, OLD.NOMBRE_PADRE_TUTOR, OLD.APELLIDO_PADRE_TUTOR, OLD.OCUPACION_PADRE_TUTOR, OLD.RELACION_PADRE_ESTUDIANTE, NULL, NULL, NULL, NULL, NULL,
        NEW.NOMBRE_PADRE_TUTOR, NEW.APELLIDO_PADRE_TUTOR, NEW.OCUPACION_PADRE_TUTOR, NEW.RELACION_PADRE_ESTUDIANTE, NULL, NULL, NULL, NULL, NULL
    );
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_unicode_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`axe`@`%`*/ /*!50003 TRIGGER `TRIGGER_BITACORA_UPDATE_ME_PADRES_TUTORES1` AFTER UPDATE ON `ME_PADRES_TUTORES` FOR EACH ROW BEGIN
        -- INSERTAR LOS VALORES ANTIGUOS Y NUEVOS EN LA TABLA BITACORA
        INSERT INTO BITACORA (
            NOMBRE_TABLA, MODULO_TABLA, TIPO_EVENTO, FECHA_REGISTRO, FECHA_MODIFICACION, USUARIO,
            COD_REGISTRO_TABLA, PRIMERA_FK, SEGUNDA_FK, TERCERA_FK, CAMPO1_VIEJO, CAMPO2_VIEJO, CAMPO3_VIEJO, CAMPO4_VIEJO, CAMPO5_VIEJO, CAMPO6_VIEJO,
            CAMPO7_VIEJO, CAMPO8_VIEJO, CAMPO9_VIEJO, CAMPO10_NUEVO, CAMPO11_NUEVO, CAMPO12_NUEVO,
            CAMPO13_NUEVO, CAMPO14_NUEVO, CAMPO15_NUEVO, CAMPO16_NUEVO, CAMPO17_NUEVO, CAMPO18_NUEVO
        )
        VALUES (
            'ME_PADRES_TUTORES ', 'MODULO ESTUDIANTES', 'UPDATE', OLD.FECHA_REGISTRO, NOW(), NEW.USUARIO_MODIFICADOR,
            OLD.COD_PADRE_TUTOR, OLD.COD_PERSONA, NULL, NULL, OLD.NOMBRE_PADRE_TUTOR, OLD.APELLIDO_PADRE_TUTOR, OLD.OCUPACION_PADRE_TUTOR, OLD.RELACION_PADRE_ESTUDIANTE, NULL, NULL, NULL, NULL, NULL,
            NEW.NOMBRE_PADRE_TUTOR, NEW.APELLIDO_PADRE_TUTOR, NEW.OCUPACION_PADRE_TUTOR, NEW.RELACION_PADRE_ESTUDIANTE, NULL, NULL, NULL, NULL, NULL
        );
    END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `MM_MATRICULA`
--

DROP TABLE IF EXISTS `MM_MATRICULA`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MM_MATRICULA` (
  `COD_MATRICULA` bigint NOT NULL AUTO_INCREMENT,
  `COD_PERSONA` bigint DEFAULT NULL,
  `COD_NIVEL_ACADEMICO` bigint DEFAULT NULL,
  `COD_ANIO_ACADEMICO` bigint DEFAULT NULL,
  `FECHA_MATRICULA` datetime DEFAULT NULL,
  `ESTADO_MATRICULA` varchar(50) DEFAULT NULL,
  `JORNADA` varchar(50) DEFAULT NULL,
  `SECCION` varchar(50) DEFAULT NULL,
  `COD_PADRE_TUTOR` bigint DEFAULT NULL,
  `USUARIO_MODIFICADOR` varchar(50) DEFAULT NULL,
  `FECHA_REGISTRO` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `Estado_registro` int DEFAULT '1',
  `SEGUNDO_ENCARGADO` varchar(80) DEFAULT NULL,
  PRIMARY KEY (`COD_MATRICULA`),
  KEY `COD_PERSONA` (`COD_PERSONA`),
  KEY `COD_NIVEL_ACADEMICO` (`COD_NIVEL_ACADEMICO`),
  KEY `COD_ANIO_ACADEMICO` (`COD_ANIO_ACADEMICO`),
  KEY `MM_MATRICULA_ibfk_4_idx` (`COD_PADRE_TUTOR`),
  CONSTRAINT `MM_MATRICULA_ibfk_1` FOREIGN KEY (`COD_PERSONA`) REFERENCES `MP_PERSONAS` (`COD_PERSONA`),
  CONSTRAINT `MM_MATRICULA_ibfk_2` FOREIGN KEY (`COD_NIVEL_ACADEMICO`) REFERENCES `MA_NIVEL_ACADEMICO` (`COD_NIVEL_ACADEMICO`),
  CONSTRAINT `MM_MATRICULA_ibfk_3` FOREIGN KEY (`COD_ANIO_ACADEMICO`) REFERENCES `MA_ANIO_ACADEMICO` (`COD_ANIO_ACADEMICO`),
  CONSTRAINT `MM_MATRICULA_ibfk_4` FOREIGN KEY (`COD_PADRE_TUTOR`) REFERENCES `ME_PADRES_TUTORES` (`COD_PADRE_TUTOR`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `MM_MATRICULA`
--

LOCK TABLES `MM_MATRICULA` WRITE;
/*!40000 ALTER TABLE `MM_MATRICULA` DISABLE KEYS */;
INSERT INTO `MM_MATRICULA` VALUES (6,40,1,2,'2023-11-25 15:19:15','Activo','Vespertina','Seccion A',22,'JOSUE','2023-11-25 21:19:15',0,NULL),(7,57,1,1,'2023-11-26 09:04:08','Activo','Matutina','Seccion A',24,'USUARIOFINAL','2023-11-26 15:04:08',1,NULL),(8,1,1,1,'2023-11-29 01:30:26','Activo','Matutina','Seccion A',24,'','2023-11-29 07:30:26',1,'Jose Perez Leon'),(9,3,2,3,'2023-11-30 01:49:44','Activo','Vespertina','Seccion A',23,'JOSUE','2023-11-30 07:49:44',1,'undefined');
/*!40000 ALTER TABLE `MM_MATRICULA` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_unicode_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`axe`@`%`*/ /*!50003 TRIGGER `TRIGGER_BITACORA_UPDATE_MM_MATRICULA1` AFTER UPDATE ON `MM_MATRICULA` FOR EACH ROW BEGIN
    -- INSERTAR LOS VALORES ANTIGUOS Y NUEVOS EN LA TABLA BITACORA
    INSERT INTO BITACORA (
           NOMBRE_TABLA, MODULO_TABLA, TIPO_EVENTO, FECHA_REGISTRO, FECHA_MODIFICACION, USUARIO,
        COD_REGISTRO_TABLA, PRIMERA_FK, SEGUNDA_FK, TERCERA_FK, CAMPO1_VIEJO, CAMPO2_VIEJO, CAMPO3_VIEJO, CAMPO4_VIEJO, CAMPO5_VIEJO, CAMPO6_VIEJO,
        CAMPO7_VIEJO, CAMPO8_VIEJO, CAMPO9_VIEJO, CAMPO10_NUEVO, CAMPO11_NUEVO, CAMPO12_NUEVO,
        CAMPO13_NUEVO, CAMPO14_NUEVO, CAMPO15_NUEVO, CAMPO16_NUEVO, CAMPO17_NUEVO, CAMPO18_NUEVO
    )
    VALUES (
        'MM_MATRICULA', 'MODULO MATRICULA', 'UPDATE', OLD.FECHA_REGISTRO, NOW(), NEW.USUARIO_MODIFICADOR,
        OLD. COD_MATRICULA, OLD.COD_PERSONA, OLD.COD_NIVEL_ACADEMICO, OLD.COD_ANIO_ACADEMICO, OLD.FECHA_MATRICULA, OLD.ESTADO_MATRICULA, OLD.JORNADA,
        OLD.SECCION, OLD.COD_PADRE_TUTOR, NULL, NULL, NULL, NULL,
	    NEW.FECHA_MATRICULA, NEW.ESTADO_MATRICULA, NEW.JORNADA,
        NEW.SECCION, NULL, NULL, NULL, NULL, NULL
    );
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `MP_CONTACTOS_EMERGENCIA`
--

DROP TABLE IF EXISTS `MP_CONTACTOS_EMERGENCIA`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MP_CONTACTOS_EMERGENCIA` (
  `COD_CONTACTO_EMERGENCIA` bigint NOT NULL AUTO_INCREMENT,
  `COD_PERSONA` bigint DEFAULT NULL,
  `NOMBRE_CONTACTO` varchar(255) DEFAULT NULL,
  `APELLIDO_CONTACTO` varchar(255) DEFAULT NULL,
  `TELEFONO` varchar(20) DEFAULT NULL,
  `RELACION` varchar(100) DEFAULT NULL,
  `FECHA` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `USUARIO_MODIFICADOR` varchar(50) DEFAULT NULL,
  `FECHA_REGISTRO` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `Estado_registro` int DEFAULT '1',
  PRIMARY KEY (`COD_CONTACTO_EMERGENCIA`),
  KEY `COD_PERSONA` (`COD_PERSONA`),
  CONSTRAINT `MP_CONTACTOS_EMERGENCIA_ibfk_1` FOREIGN KEY (`COD_PERSONA`) REFERENCES `MP_PERSONAS` (`COD_PERSONA`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `MP_CONTACTOS_EMERGENCIA`
--

LOCK TABLES `MP_CONTACTOS_EMERGENCIA` WRITE;
/*!40000 ALTER TABLE `MP_CONTACTOS_EMERGENCIA` DISABLE KEYS */;
INSERT INTO `MP_CONTACTOS_EMERGENCIA` VALUES (1,1,'Jose','Hugo','9884-6553','Amigo','2023-11-29 06:05:40','JOSUE','2023-11-29 06:05:40',1),(2,2,'Jouse','Mondragon','9789-5644','amigo','2023-11-29 06:08:48','JOSUE','2023-11-29 06:08:48',1),(3,3,'Jouse','Mondragon','null','amigo','2023-11-29 17:34:09','JOSUE','2023-11-29 17:34:09',1),(4,4,'Jouse','Mondragon','9585-8888','amiga','2023-11-29 17:35:47','JOSUE','2023-11-29 17:35:47',1),(5,5,'Nilson','Castellom','9811-1111','Hermano','2023-11-30 19:01:23','JOSUE','2023-11-30 19:01:23',1);
/*!40000 ALTER TABLE `MP_CONTACTOS_EMERGENCIA` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_unicode_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`axe`@`%`*/ /*!50003 TRIGGER `TRIGGER_BITACORA_UPDATE_MP_CONTACTOS_EMERGENCIA1` AFTER UPDATE ON `MP_CONTACTOS_EMERGENCIA` FOR EACH ROW BEGIN
    -- INSERTAR LOS VALORES ANTIGUOS Y NUEVOS EN LA TABLA BITACORA
    INSERT INTO BITACORA (
         NOMBRE_TABLA, MODULO_TABLA, TIPO_EVENTO, FECHA_REGISTRO, FECHA_MODIFICACION, USUARIO,
        COD_REGISTRO_TABLA, PRIMERA_FK, SEGUNDA_FK, TERCERA_FK, CAMPO1_VIEJO, CAMPO2_VIEJO, CAMPO3_VIEJO, CAMPO4_VIEJO, CAMPO5_VIEJO, CAMPO6_VIEJO,
        CAMPO7_VIEJO, CAMPO8_VIEJO, CAMPO9_VIEJO, CAMPO10_NUEVO, CAMPO11_NUEVO, CAMPO12_NUEVO,
        CAMPO13_NUEVO, CAMPO14_NUEVO, CAMPO15_NUEVO, CAMPO16_NUEVO, CAMPO17_NUEVO, CAMPO18_NUEVO
    )
    VALUES (
        'MP_CONTACTOS_EMERGENCIA', 'MODULO PERSONAS', 'UPDATE', OLD.FECHA_REGISTRO, NOW(), NEW.USUARIO_MODIFICADOR,
        OLD.COD_CONTACTO_EMERGENCIA, OLD.COD_PERSONA, NULL, NULL, OLD.NOMBRE_CONTACTO, OLD.APELLIDO_CONTACTO, OLD.TELEFONO, OLD.RELACION,
        OLD.FECHA, NULL, NULL, NULL, NULL, 
        NEW.NOMBRE_CONTACTO, NEW.APELLIDO_CONTACTO, NEW.TELEFONO, NEW.RELACION,
        NEW.FECHA, NULL, NULL, NULL, NULL
    );
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `MP_CORREOS`
--

DROP TABLE IF EXISTS `MP_CORREOS`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MP_CORREOS` (
  `COD_CORREO` bigint NOT NULL AUTO_INCREMENT,
  `COD_PERSONA` bigint DEFAULT NULL,
  `CORREO_ELECTRONICO` varchar(255) DEFAULT NULL,
  `FECHA` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `USUARIO_MODIFICADOR` varchar(50) DEFAULT NULL,
  `FECHA_REGISTRO` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `Estado_registro` int DEFAULT '1',
  PRIMARY KEY (`COD_CORREO`),
  KEY `COD_PERSONA` (`COD_PERSONA`),
  CONSTRAINT `MP_CORREOS_ibfk_1` FOREIGN KEY (`COD_PERSONA`) REFERENCES `MP_PERSONAS` (`COD_PERSONA`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `MP_CORREOS`
--

LOCK TABLES `MP_CORREOS` WRITE;
/*!40000 ALTER TABLE `MP_CORREOS` DISABLE KEYS */;
INSERT INTO `MP_CORREOS` VALUES (1,1,'juanperez@gmail.com','2023-11-29 06:05:40','JOSUE','2023-11-29 06:05:40',1),(2,2,'rodriguezpe@gmail.com','2023-11-29 06:08:48','JOSUE','2023-11-29 06:08:48',1),(3,3,'martonio@gmail.com','2023-11-29 17:34:09','','2023-11-29 17:34:09',1),(4,4,'martonio@gmail.com','2023-11-29 17:35:47','JOSUE','2023-11-29 17:35:47',1),(5,5,'josueisaiamartinezlopez@gmail.com','2023-11-30 19:01:23','JOSUE','2023-11-30 19:01:23',1);
/*!40000 ALTER TABLE `MP_CORREOS` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_unicode_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`axe`@`%`*/ /*!50003 TRIGGER `TRIGGER_BITACORA_UPDATE_MP_CORREOS1` AFTER UPDATE ON `MP_CORREOS` FOR EACH ROW BEGIN
    -- INSERTAR LOS VALORES ANTIGUOS Y NUEVOS EN LA TABLA BITACORA
    INSERT INTO BITACORA (
         NOMBRE_TABLA, MODULO_TABLA, TIPO_EVENTO, FECHA_REGISTRO, FECHA_MODIFICACION, USUARIO,
        COD_REGISTRO_TABLA, PRIMERA_FK, SEGUNDA_FK, TERCERA_FK, CAMPO1_VIEJO, CAMPO2_VIEJO, CAMPO3_VIEJO, CAMPO4_VIEJO, CAMPO5_VIEJO, CAMPO6_VIEJO,
        CAMPO7_VIEJO, CAMPO8_VIEJO, CAMPO9_VIEJO, CAMPO10_NUEVO, CAMPO11_NUEVO, CAMPO12_NUEVO,
        CAMPO13_NUEVO, CAMPO14_NUEVO, CAMPO15_NUEVO, CAMPO16_NUEVO, CAMPO17_NUEVO, CAMPO18_NUEVO
    )
    VALUES (
        'MP_CORREOS', 'MODULO PERSONAS', 'UPDATE', OLD.FECHA_REGISTRO , NOW(), NEW.USUARIO_MODIFICADOR,
        OLD.COD_CORREO, OLD.COD_PERSONA, NULL, NULL, OLD.CORREO_ELECTRONICO, OLD.FECHA, NULL, NULL,
        NULL, NULL, NULL, NULL, NULL, 
        NEW.CORREO_ELECTRONICO, NEW.FECHA, NULL, NULL,
        NULL, NULL, NULL, NULL, NULL
    );
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `MP_DIRECCIONES`
--

DROP TABLE IF EXISTS `MP_DIRECCIONES`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MP_DIRECCIONES` (
  `COD_DIRECCION` bigint NOT NULL AUTO_INCREMENT,
  `COD_PERSONA` bigint DEFAULT NULL,
  `DIRECCION` varchar(255) DEFAULT NULL,
  `DEPARTAMENTO` varchar(100) DEFAULT NULL,
  `CIUDAD` varchar(100) DEFAULT NULL,
  `PAIS` varchar(100) DEFAULT NULL,
  `FECHA` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `USUARIO_MODIFICADOR` varchar(50) DEFAULT NULL,
  `FECHA_REGISTRO` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `Estado_registro` int DEFAULT '1',
  PRIMARY KEY (`COD_DIRECCION`),
  KEY `COD_PERSONA` (`COD_PERSONA`),
  CONSTRAINT `MP_DIRECCIONES_ibfk_1` FOREIGN KEY (`COD_PERSONA`) REFERENCES `MP_PERSONAS` (`COD_PERSONA`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `MP_DIRECCIONES`
--

LOCK TABLES `MP_DIRECCIONES` WRITE;
/*!40000 ALTER TABLE `MP_DIRECCIONES` DISABLE KEYS */;
INSERT INTO `MP_DIRECCIONES` VALUES (1,1,'Colonia John F. Kennedy, Casa azul en frente del instituto Milla Selva, 1 cuadra antes de Baleadas Kennedy','Francisco Morazan','Tegucigalpa','Honduras','2023-11-29 06:05:40','JOSUE','2023-11-29 06:05:40',1),(2,2,'ysyhshshs','Francisco Morazan','Tegucigalpa','Honduras','2023-11-29 06:08:48','JOSUE','2023-11-29 06:08:48',1),(3,3,'ysyhshshs','Francisco Morazan','Tegucigalpa','Honduras','2023-11-29 17:34:09','JOSUE','2023-11-29 17:34:09',1),(4,4,'JAJAJAJAssss','Francisco Morazan','Tegucigalpa','Honduras','2023-11-29 17:35:47','JOSUE','2023-11-29 17:35:47',1),(5,5,'santa ana, enfrente de la iglesia, casa lomas donde esta','Francisco Morazan','Tegucigalpa','Honduras','2023-11-30 19:01:23','JOSUE','2023-11-30 19:01:23',1);
/*!40000 ALTER TABLE `MP_DIRECCIONES` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_unicode_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`axe`@`%`*/ /*!50003 TRIGGER `TRIGGER_BITACORA_UPDATE_MP_DIRECCIONES1` AFTER UPDATE ON `MP_DIRECCIONES` FOR EACH ROW BEGIN
    -- INSERTAR LOS VALORES ANTIGUOS Y NUEVOS EN LA TABLA BITACORA
    INSERT INTO BITACORA (
         NOMBRE_TABLA, MODULO_TABLA, TIPO_EVENTO, FECHA_REGISTRO, FECHA_MODIFICACION, USUARIO,
        COD_REGISTRO_TABLA, PRIMERA_FK, SEGUNDA_FK, TERCERA_FK, CAMPO1_VIEJO, CAMPO2_VIEJO, CAMPO3_VIEJO, CAMPO4_VIEJO, CAMPO5_VIEJO, CAMPO6_VIEJO,
        CAMPO7_VIEJO, CAMPO8_VIEJO, CAMPO9_VIEJO, CAMPO10_NUEVO, CAMPO11_NUEVO, CAMPO12_NUEVO,
        CAMPO13_NUEVO, CAMPO14_NUEVO, CAMPO15_NUEVO, CAMPO16_NUEVO, CAMPO17_NUEVO, CAMPO18_NUEVO
    )
    VALUES (
        'MP_DIRECCIONES', 'MODULO PERSONAS', 'UPDATE', OLD.FECHA_REGISTRO, NOW(), NEW.USUARIO_MODIFICADOR,
        OLD.COD_DIRECCION, OLD.COD_PERSONA, NULL,NULL, OLD.DIRECCION, OLD.DEPARTAMENTO, OLD.CIUDAD,
        OLD.PAIS, OLD.FECHA, NULL, NULL, NULL, NULL,
        NEW.DIRECCION, NEW.DEPARTAMENTO, NEW.CIUDAD,
        NEW.PAIS, NEW.FECHA, NULL, NULL, NULL, NULL
    );
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `MP_PERSONAS`
--

DROP TABLE IF EXISTS `MP_PERSONAS`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MP_PERSONAS` (
  `COD_PERSONA` bigint NOT NULL AUTO_INCREMENT,
  `NOMBRE` varchar(255) DEFAULT NULL,
  `APELLIDO` varchar(255) DEFAULT NULL,
  `IDENTIDAD` varchar(255) DEFAULT NULL,
  `GENERO` varchar(10) NOT NULL,
  `TIPO_PERSONA` varchar(255) DEFAULT NULL,
  `EDAD` int DEFAULT NULL,
  `FECHA_NACIMIENTO` date DEFAULT NULL,
  `FECHA_REGISTRO` date DEFAULT NULL,
  `FECHA_SALIDA` date DEFAULT NULL,
  `USUARIO_MODIFICADOR` varchar(50) DEFAULT NULL,
  `Estado_registro` int DEFAULT '1',
  PRIMARY KEY (`COD_PERSONA`),
  UNIQUE KEY `UNQ_IDENTIDAD` (`IDENTIDAD`),
  CONSTRAINT `CHK_GENERO` CHECK (((`GENERO` = _utf8mb4'M') or (`GENERO` = _utf8mb4'F')))
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `MP_PERSONAS`
--

LOCK TABLES `MP_PERSONAS` WRITE;
/*!40000 ALTER TABLE `MP_PERSONAS` DISABLE KEYS */;
INSERT INTO `MP_PERSONAS` VALUES (1,'Erlyn','Meraz','0777-7777-77777','M','Personal Administrativo',32,'1991-01-18','2023-11-29',NULL,'JOSUE',1),(2,'Antonio','Solis','0801-1978-033002','M','Personal Administrativo',45,'1978-11-20','2023-11-29',NULL,'JOSUE',1),(3,'Antonio','Solis','0801197803300','M','Personal Administrativo',45,'1978-11-20','2023-11-29',NULL,'JOSUE',1),(4,'lUISa','Mondragon','0801-1978-88888','M','Personal Administrativo',45,'1978-11-20','2023-11-29',NULL,'JOSUE',1),(5,'Josue Isaiass','Martinez','0801-1010-10109','M','Personal Administrativo',21,'2002-07-30','2023-11-30',NULL,'JOSUE',1);
/*!40000 ALTER TABLE `MP_PERSONAS` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_unicode_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`axe`@`%`*/ /*!50003 TRIGGER `TRIGGER_BITACORA_UPDATE_MP_PERSONAS1` AFTER UPDATE ON `MP_PERSONAS` FOR EACH ROW BEGIN
            -- INSERTAR LOS VALORES ANTIGUOS Y NUEVOS EN LA TABLA BITACORA
            INSERT INTO BITACORA (
               NOMBRE_TABLA, MODULO_TABLA, TIPO_EVENTO, FECHA_REGISTRO, FECHA_MODIFICACION, USUARIO,
                COD_REGISTRO_TABLA, PRIMERA_FK, SEGUNDA_FK, TERCERA_FK, CAMPO1_VIEJO, CAMPO2_VIEJO, CAMPO3_VIEJO, CAMPO4_VIEJO, CAMPO5_VIEJO, CAMPO6_VIEJO,
                CAMPO7_VIEJO, CAMPO8_VIEJO, CAMPO9_VIEJO, CAMPO10_NUEVO, CAMPO11_NUEVO, CAMPO12_NUEVO,
                CAMPO13_NUEVO, CAMPO14_NUEVO, CAMPO15_NUEVO, CAMPO16_NUEVO, CAMPO17_NUEVO, CAMPO18_NUEVO
            )
            VALUES (
                'MP_PERSONAS', 'MODULO PERSONAS', 'UPDATE', OLD.FECHA_REGISTRO, NOW(), NEW.USUARIO_MODIFICADOR,
                OLD.COD_PERSONA, NULL, NULL, NULL, OLD.NOMBRE, OLD.APELLIDO, OLD.IDENTIDAD,
                OLD.GENERO, OLD.TIPO_PERSONA, OLD.EDAD, OLD.FECHA_NACIMIENTO, NOW(), OLD.FECHA_SALIDA,
                NEW.NOMBRE, NEW.APELLIDO, NEW.IDENTIDAD,
                NEW.GENERO, NEW.TIPO_PERSONA, NEW.EDAD, NEW.FECHA_NACIMIENTO, NOW(), NEW.FECHA_SALIDA
            );
        END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `MP_TELEFONOS`
--

DROP TABLE IF EXISTS `MP_TELEFONOS`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MP_TELEFONOS` (
  `COD_TELEFONO` bigint NOT NULL AUTO_INCREMENT,
  `COD_PERSONA` bigint DEFAULT NULL,
  `TELEFONO` varchar(20) DEFAULT NULL,
  `TIPO_TELEFONO` varchar(50) DEFAULT NULL,
  `FECHA` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `USUARIO_MODIFICADOR` varchar(50) DEFAULT NULL,
  `FECHA_REGISTRO` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `Estado_registro` int DEFAULT '1',
  PRIMARY KEY (`COD_TELEFONO`),
  KEY `COD_PERSONA` (`COD_PERSONA`),
  CONSTRAINT `MP_TELEFONOS_ibfk_1` FOREIGN KEY (`COD_PERSONA`) REFERENCES `MP_PERSONAS` (`COD_PERSONA`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `MP_TELEFONOS`
--

LOCK TABLES `MP_TELEFONOS` WRITE;
/*!40000 ALTER TABLE `MP_TELEFONOS` DISABLE KEYS */;
INSERT INTO `MP_TELEFONOS` VALUES (1,1,'9999-9999','Fijo','2023-11-29 06:05:40','JOSUE','2023-11-29 06:05:40',1),(2,2,'9888_6677','insano','2023-11-29 06:08:48','JOSUE','2023-11-29 06:08:48',1),(3,3,'9789-5644','Fijo','2023-11-29 17:34:09','JOSUE','2023-11-29 17:34:09',1),(4,4,'9789-8888','Fijo','2023-11-29 17:35:47','JOSUE','2023-11-29 17:35:47',1),(5,5,'9810-1010','Movil','2023-11-30 19:01:23','JOSUE','2023-11-30 19:01:23',1);
/*!40000 ALTER TABLE `MP_TELEFONOS` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_unicode_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`axe`@`%`*/ /*!50003 TRIGGER `TRIGGER_BITACORA_UPDATE_MP_TELEFONOS1` AFTER UPDATE ON `MP_TELEFONOS` FOR EACH ROW BEGIN
    -- INSERTAR LOS VALORES ANTIGUOS Y NUEVOS EN LA TABLA BITACORA
    INSERT INTO BITACORA (
         NOMBRE_TABLA, MODULO_TABLA, TIPO_EVENTO, FECHA_REGISTRO, FECHA_MODIFICACION, USUARIO,
        COD_REGISTRO_TABLA, PRIMERA_FK, SEGUNDA_FK, TERCERA_FK, CAMPO1_VIEJO, CAMPO2_VIEJO, CAMPO3_VIEJO, CAMPO4_VIEJO, CAMPO5_VIEJO, CAMPO6_VIEJO,
        CAMPO7_VIEJO, CAMPO8_VIEJO, CAMPO9_VIEJO, CAMPO10_NUEVO, CAMPO11_NUEVO, CAMPO12_NUEVO,
        CAMPO13_NUEVO, CAMPO14_NUEVO, CAMPO15_NUEVO, CAMPO16_NUEVO, CAMPO17_NUEVO, CAMPO18_NUEVO
    )
    VALUES (
        'MP_TELEFONOS', 'MODULO PERSONAS', 'UPDATE', OLD.FECHA_REGISTRO, NOW(), NEW.USUARIO_MODIFICADOR,
        OLD.COD_TELEFONO, OLD.COD_PERSONA, NULL, NULL, OLD.TELEFONO, OLD.TIPO_TELEFONO, OLD.FECHA,
        NULL, NULL, NULL, NULL, NULL, NULL,
        NEW.TELEFONO, NEW.TIPO_TELEFONO, NEW.FECHA,
        NULL, NULL, NULL, NULL, NULL, NULL
    );
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `MS_ESTADO_BITACORA`
--

DROP TABLE IF EXISTS `MS_ESTADO_BITACORA`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MS_ESTADO_BITACORA` (
  `COD_ESTADO_BITACORA` int NOT NULL AUTO_INCREMENT,
  `ESTADO_BITACORA` varchar(100) DEFAULT NULL,
  `VALOR` int DEFAULT NULL,
  PRIMARY KEY (`COD_ESTADO_BITACORA`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `MS_ESTADO_BITACORA`
--

LOCK TABLES `MS_ESTADO_BITACORA` WRITE;
/*!40000 ALTER TABLE `MS_ESTADO_BITACORA` DISABLE KEYS */;
INSERT INTO `MS_ESTADO_BITACORA` VALUES (1,'ACTIVO',1);
/*!40000 ALTER TABLE `MS_ESTADO_BITACORA` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `MS_ESTADO_ROLES`
--

DROP TABLE IF EXISTS `MS_ESTADO_ROLES`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MS_ESTADO_ROLES` (
  `COD_ESTADO_ROL` int NOT NULL AUTO_INCREMENT,
  `DESCRIPCION` varchar(100) DEFAULT NULL,
  `USUARIO_MODIFICADOR` varchar(50) DEFAULT NULL,
  `FECHA_REGISTRO` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `Estado_registro` int DEFAULT '1',
  PRIMARY KEY (`COD_ESTADO_ROL`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `MS_ESTADO_ROLES`
--

LOCK TABLES `MS_ESTADO_ROLES` WRITE;
/*!40000 ALTER TABLE `MS_ESTADO_ROLES` DISABLE KEYS */;
INSERT INTO `MS_ESTADO_ROLES` VALUES (1,'Estado Rol','UsuarioModificador','2023-12-02 00:40:56',1),(2,'ROL SYSadmin','UsuarioModificador','2023-12-02 00:42:34',1),(3,'Rol TEST 2','UsuarioModificador','2023-12-02 00:44:26',0),(4,'Nuevo ROL','UsuarioModificador','2023-12-02 03:34:31',0),(5,'ROL TORO','1','2023-12-02 04:29:43',1),(6,'ROL TORO','1','2023-12-02 04:29:45',0),(7,'ROL','1','2023-12-02 04:30:14',1);
/*!40000 ALTER TABLE `MS_ESTADO_ROLES` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `MS_ESTADO_USUARIO`
--

DROP TABLE IF EXISTS `MS_ESTADO_USUARIO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MS_ESTADO_USUARIO` (
  `COD_ESTADO_USUARIO` bigint NOT NULL AUTO_INCREMENT,
  `DESCRIPCION` varchar(100) DEFAULT NULL,
  `USUARIO_MODIFICADOR` varchar(50) DEFAULT NULL,
  `FECHA_REGISTRO` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `Estado_registro` int DEFAULT '1',
  PRIMARY KEY (`COD_ESTADO_USUARIO`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `MS_ESTADO_USUARIO`
--

LOCK TABLES `MS_ESTADO_USUARIO` WRITE;
/*!40000 ALTER TABLE `MS_ESTADO_USUARIO` DISABLE KEYS */;
INSERT INTO `MS_ESTADO_USUARIO` VALUES (1,'ACTIVO','admin - BD','2023-10-21 17:19:22',1),(2,'INACTIVO','Admin - BD','2023-10-21 17:19:23',1),(3,'1','1','2023-11-12 13:53:23',1);
/*!40000 ALTER TABLE `MS_ESTADO_USUARIO` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_unicode_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`axe`@`%`*/ /*!50003 TRIGGER `TRIGGER_BITACORA_UPDATE_MS_ESTADO_USUARIO1` AFTER UPDATE ON `MS_ESTADO_USUARIO` FOR EACH ROW BEGIN
    -- INSERTAR LOS VALORES ANTIGUOS Y NUEVOS EN LA TABLA BITACORA
    INSERT INTO BITACORA (
        NOMBRE_TABLA, MODULO_TABLA, TIPO_EVENTO, FECHA_REGISTRO, FECHA_MODIFICACION, USUARIO,
        COD_REGISTRO_TABLA, PRIMERA_FK, SEGUNDA_FK, TERCERA_FK, CAMPO1_VIEJO, CAMPO2_VIEJO, CAMPO3_VIEJO, CAMPO4_VIEJO, CAMPO5_VIEJO, CAMPO6_VIEJO,
        CAMPO7_VIEJO, CAMPO8_VIEJO, CAMPO9_VIEJO, CAMPO10_NUEVO, CAMPO11_NUEVO, CAMPO12_NUEVO,
        CAMPO13_NUEVO, CAMPO14_NUEVO, CAMPO15_NUEVO, CAMPO16_NUEVO, CAMPO17_NUEVO, CAMPO18_NUEVO
    )
    VALUES (
        'MS_ESTADO_USUARIO', 'MODULO SEGURIDAD', 'UPDATE', OLD.FECHA_REGISTRO, NOW(), NEW.USUARIO_MODIFICADOR,
        OLD.COD_ESTADO_USUARIO, NULL, NULL, NULL, OLD.DESCRIPCION, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
        NEW.DESCRIPCION, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
    );
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `MS_OBJETOS`
--

DROP TABLE IF EXISTS `MS_OBJETOS`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MS_OBJETOS` (
  `COD_OBJETO` bigint NOT NULL AUTO_INCREMENT,
  `OBJETO` varchar(100) DEFAULT NULL,
  `DESCRIPCION` varchar(120) DEFAULT NULL,
  `TIPO_OBJETO` varchar(15) DEFAULT NULL,
  `Estado_registro` int DEFAULT '1',
  PRIMARY KEY (`COD_OBJETO`)
) ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `MS_OBJETOS`
--

LOCK TABLES `MS_OBJETOS` WRITE;
/*!40000 ALTER TABLE `MS_OBJETOS` DISABLE KEYS */;
INSERT INTO `MS_OBJETOS` VALUES (1,'BITACORA','Lleva informacion de los cambios sufridos a lo largo del tiempo','Auditoria',1),(3,'USUARIOS','Vista de usuarios',NULL,1),(4,'PREGUNTAS','Vista de preguntas que para seguridad',NULL,1),(5,'CAMBIAR_CONTRASENA','Vista de para cambiar contraseÃ±a',NULL,1),(6,'ESTADO USUARIO','Vista de estado de usuario','null',1),(7,'ROLES','Vista de roles',NULL,1),(8,'OBJETOS','Vista de objetos',NULL,1),(9,'Prueba','Pruebas test','test',1),(10,'PRUEBAINSERT','Pruebas insert','test',1),(11,'PERSONAS','Vista de personas','test',0),(12,'PADRES','Vista padres','test',0),(13,'DOCENTES','Vista Docentes','test',0),(14,'ASIGNATURAS','Vista Asignaturas','test',0),(15,'MATRICULA','Vista MatrÃ­cula','test',0),(16,'OBJETOS','Vista de objetos','I do not know',0),(17,'PARAMETROS','Vista de parametros','Parametros',1),(18,'MATRICULA','Vista de matricula','Matricula',1);
/*!40000 ALTER TABLE `MS_OBJETOS` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `MS_PARAMETROS`
--

DROP TABLE IF EXISTS `MS_PARAMETROS`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MS_PARAMETROS` (
  `COD_PARAMETRO` bigint NOT NULL AUTO_INCREMENT,
  `PARAMETRO` varchar(100) DEFAULT NULL,
  `VALOR` varchar(50) DEFAULT NULL,
  `USUARIO` varchar(100) DEFAULT NULL,
  `FECHA_CREADO` datetime DEFAULT CURRENT_TIMESTAMP,
  `FECHA_MODIFICADO` datetime DEFAULT NULL,
  `Estado_registro` int DEFAULT '1',
  PRIMARY KEY (`COD_PARAMETRO`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `MS_PARAMETROS`
--

LOCK TABLES `MS_PARAMETROS` WRITE;
/*!40000 ALTER TABLE `MS_PARAMETROS` DISABLE KEYS */;
INSERT INTO `MS_PARAMETROS` VALUES (1,'ACCESO_INTENTOS','3','JOSUE','2023-11-10 11:51:11',NULL,1),(2,'PREGUNTAS_SEGURIDAD','2','JOSUE','2023-11-10 11:59:58',NULL,1),(3,'Prueba','null','null','2023-11-26 14:36:13','2023-11-26 14:36:13',1),(4,'TEST 1','11','TESTEO','2023-11-26 16:53:20','2023-11-26 16:53:20',1),(5,'PRUEBAUP','10','JOSUE','2023-11-26 19:23:18','2023-11-26 19:23:18',0);
/*!40000 ALTER TABLE `MS_PARAMETROS` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `MS_PREGUNTAS`
--

DROP TABLE IF EXISTS `MS_PREGUNTAS`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MS_PREGUNTAS` (
  `COD_PREGUNTA` bigint NOT NULL AUTO_INCREMENT,
  `PREGUNTA` varchar(100) DEFAULT NULL,
  `Estado_registro` int DEFAULT '1',
  PRIMARY KEY (`COD_PREGUNTA`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `MS_PREGUNTAS`
--

LOCK TABLES `MS_PREGUNTAS` WRITE;
/*!40000 ALTER TABLE `MS_PREGUNTAS` DISABLE KEYS */;
INSERT INTO `MS_PREGUNTAS` VALUES (1,'Â¿CuÃ¡l fue tu primera mascota?',1),(2,'Â¿CuÃ¡l es tu color favorito?',1),(3,'Â¿CuÃ¡l es el nombre de tu mejor amigo de la infancia?',1),(4,'Â¿CuÃ¡l es tu comida favorita?',1),(5,'Â¿CuÃ¡l es tu equipo deportivo favorito?',1),(6,'Â¿CuÃ¡l es el nombre de tu primer amor?',1),(7,'Â¿CuÃ¡l es el nombre de tu pelÃ­cula favorita?',1),(8,'Â¿CuÃ¡l fue tu primer trabajo?',1),(9,'Â¿CuÃ¡l es el nombre de tu personaje histÃ³rico favorito?',1),(10,'Â¿CuÃ¡l es el nombre de tu libro favorito?',1),(11,'CuÃ¡l es tu carro de tus sueÃ±os',1),(12,'CuÃ¡l es tu equipo de futbol',1),(13,'Cual es su altura',0);
/*!40000 ALTER TABLE `MS_PREGUNTAS` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `MS_PREGUNTA_USUARIO`
--

DROP TABLE IF EXISTS `MS_PREGUNTA_USUARIO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MS_PREGUNTA_USUARIO` (
  `COD_PREGUNTA` bigint NOT NULL AUTO_INCREMENT,
  `PREGUNTA` varchar(100) NOT NULL,
  `RESPUESTA` varchar(100) NOT NULL,
  `COD_USUARIO` int DEFAULT NULL,
  `Estado_registro` int DEFAULT '1',
  PRIMARY KEY (`COD_PREGUNTA`),
  KEY `COD_USUARIO` (`COD_USUARIO`),
  CONSTRAINT `MS_PREGUNTA_USUARIO_ibfk_1` FOREIGN KEY (`COD_USUARIO`) REFERENCES `MS_USUARIOS` (`COD_USUARIO`)
) ENGINE=InnoDB AUTO_INCREMENT=132 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `MS_PREGUNTA_USUARIO`
--

LOCK TABLES `MS_PREGUNTA_USUARIO` WRITE;
/*!40000 ALTER TABLE `MS_PREGUNTA_USUARIO` DISABLE KEYS */;
/*!40000 ALTER TABLE `MS_PREGUNTA_USUARIO` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `MS_REL_PREGUNTA_USUARIO`
--

DROP TABLE IF EXISTS `MS_REL_PREGUNTA_USUARIO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MS_REL_PREGUNTA_USUARIO` (
  `COD_REL_PREG_USUA` bigint NOT NULL AUTO_INCREMENT,
  `COD_PREGUNTA` bigint DEFAULT NULL,
  `COD_USUARIO` int DEFAULT NULL,
  `RESPUESTA` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`COD_REL_PREG_USUA`),
  KEY `COD_PREGUNTA` (`COD_PREGUNTA`),
  KEY `COD_USUARIO` (`COD_USUARIO`),
  CONSTRAINT `MS_REL_PREGUNTA_USUARIO_ibfk_1` FOREIGN KEY (`COD_PREGUNTA`) REFERENCES `MS_PREGUNTAS` (`COD_PREGUNTA`),
  CONSTRAINT `MS_REL_PREGUNTA_USUARIO_ibfk_2` FOREIGN KEY (`COD_USUARIO`) REFERENCES `MS_USUARIOS` (`COD_USUARIO`)
) ENGINE=InnoDB AUTO_INCREMENT=83 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `MS_REL_PREGUNTA_USUARIO`
--

LOCK TABLES `MS_REL_PREGUNTA_USUARIO` WRITE;
/*!40000 ALTER TABLE `MS_REL_PREGUNTA_USUARIO` DISABLE KEYS */;
INSERT INTO `MS_REL_PREGUNTA_USUARIO` VALUES (72,6,9,'ST'),(73,2,9,'Verde'),(74,1,15,'perro'),(75,8,15,'startek'),(76,2,49,'Rojo'),(77,4,49,'Rojo'),(78,3,9,'Rojo'),(79,4,9,'Rojo'),(80,5,9,'Rojo'),(81,12,1,'Real Madrid'),(82,6,1,'ST');
/*!40000 ALTER TABLE `MS_REL_PREGUNTA_USUARIO` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `MS_ROLES`
--

DROP TABLE IF EXISTS `MS_ROLES`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MS_ROLES` (
  `COD_ROL` int NOT NULL AUTO_INCREMENT,
  `DESCRIPCION` varchar(100) DEFAULT NULL,
  `FECHA_CREACION` datetime DEFAULT NULL,
  `FECHA_MODIFICACION` datetime DEFAULT NULL,
  `MODIFICADO_POR` varchar(100) DEFAULT NULL,
  `Estado_registro` int DEFAULT '1',
  `COD_ESTADO_ROL` bigint DEFAULT NULL,
  PRIMARY KEY (`COD_ROL`),
  UNIQUE KEY `DESCRIPCION_UNIQUE` (`DESCRIPCION`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `MS_ROLES`
--

LOCK TABLES `MS_ROLES` WRITE;
/*!40000 ALTER TABLE `MS_ROLES` DISABLE KEYS */;
INSERT INTO `MS_ROLES` VALUES (4,'Administrador','2023-10-09 22:11:01','2023-10-09 22:11:01','EMERAZ',1,NULL),(6,'USUARIO','2023-10-10 00:00:00','2023-10-10 00:00:00','INVITADO',1,NULL),(11,'USUARIO FINAL','2023-11-26 00:00:00','2023-11-26 00:00:00','USUARIOFINAL',0,NULL),(12,'Vista de padres','2023-11-27 00:00:00','2023-11-27 00:00:00','JOSUE',0,NULL);
/*!40000 ALTER TABLE `MS_ROLES` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_unicode_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`axe`@`%`*/ /*!50003 TRIGGER `TRIGGER_BITACORA_UPDATE_MS_ROLES1` AFTER UPDATE ON `MS_ROLES` FOR EACH ROW BEGIN
    -- INSERTAR LOS VALORES ANTIGUOS Y NUEVOS EN LA TABLA BITACORA
    INSERT INTO BITACORA (
        NOMBRE_TABLA, MODULO_TABLA, TIPO_EVENTO, FECHA_REGISTRO, FECHA_MODIFICACION, USUARIO,
        COD_REGISTRO_TABLA, PRIMERA_FK, SEGUNDA_FK, TERCERA_FK, CAMPO1_VIEJO, CAMPO2_VIEJO, CAMPO3_VIEJO, CAMPO4_VIEJO, CAMPO5_VIEJO, CAMPO6_VIEJO,
        CAMPO7_VIEJO, CAMPO8_VIEJO, CAMPO9_VIEJO, CAMPO10_NUEVO, CAMPO11_NUEVO, CAMPO12_NUEVO,
        CAMPO13_NUEVO, CAMPO14_NUEVO, CAMPO15_NUEVO, CAMPO16_NUEVO, CAMPO17_NUEVO, CAMPO18_NUEVO
    )
    VALUES (
        'MS_ROLES', 'MODULO SEGURIDAD', 'UPDATE', OLD.FECHA_CREACION, NOW(), NEW.MODIFICADO_POR,
        OLD.COD_ROL, NULL, NULL, NULL, OLD.DESCRIPCION, OLD.FECHA_CREACION, OLD.FECHA_MODIFICACION, OLD.MODIFICADO_POR, NULL, NULL, NULL, NULL, NULL,
        NEW.DESCRIPCION, NEW.FECHA_CREACION, NEW.FECHA_MODIFICACION, NEW.MODIFICADO_POR, NULL, NULL, NULL, NULL, NULL
    );
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `MS_ROLES_PERMISOS`
--

DROP TABLE IF EXISTS `MS_ROLES_PERMISOS`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MS_ROLES_PERMISOS` (
  `COD_ROL_OBJETO` bigint NOT NULL AUTO_INCREMENT,
  `COD_ROL` int DEFAULT NULL,
  `COD_OBJETO` bigint DEFAULT NULL,
  `PERMISO_INSERCION` tinyint(1) DEFAULT NULL,
  `PERMISO_ELIMINACION` tinyint(1) DEFAULT NULL,
  `PERMISO_ACTUALIZACION` tinyint(1) DEFAULT NULL,
  `PERMISO_CONSULTAR` tinyint(1) DEFAULT NULL,
  `FECHA_CREACION` datetime DEFAULT NULL,
  `MODIFICADO_POR` varchar(100) DEFAULT NULL,
  `Estado_registro` int DEFAULT '1',
  PRIMARY KEY (`COD_ROL_OBJETO`),
  KEY `cod_rol_idx` (`COD_ROL`),
  KEY `cod_objeto_idx` (`COD_OBJETO`),
  CONSTRAINT `cod_objeto` FOREIGN KEY (`COD_OBJETO`) REFERENCES `MS_OBJETOS` (`COD_OBJETO`),
  CONSTRAINT `cod_rol` FOREIGN KEY (`COD_ROL`) REFERENCES `MS_ROLES` (`COD_ROL`)
) ENGINE=InnoDB AUTO_INCREMENT=32 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `MS_ROLES_PERMISOS`
--

LOCK TABLES `MS_ROLES_PERMISOS` WRITE;
/*!40000 ALTER TABLE `MS_ROLES_PERMISOS` DISABLE KEYS */;
INSERT INTO `MS_ROLES_PERMISOS` VALUES (3,4,1,1,1,1,1,'2023-10-09 00:00:00','INVITADO',1),(4,4,3,1,1,1,1,'2023-10-10 00:00:00','INVITADO',1),(5,NULL,NULL,1,1,1,1,'2023-10-10 00:00:00','INVITADO',1),(6,4,4,1,1,1,1,'2023-11-12 12:00:00','JOSUE',1),(7,4,5,0,1,1,0,'2023-11-12 13:30:00','JOSUE',1),(8,4,6,1,0,1,1,'2023-11-12 14:45:00','JOSUE',1),(9,4,7,1,1,1,1,'2023-11-12 15:15:00','JOSUE',1),(10,4,8,1,1,1,1,'2023-11-12 16:00:00','JOSUE',1),(11,4,12,0,0,0,1,'2023-11-26 00:00:00',NULL,1),(24,6,6,0,0,0,0,'2023-11-26 00:00:00',NULL,0),(25,6,7,1,1,NULL,NULL,'2023-11-28 00:00:00',NULL,1),(28,6,1,NULL,NULL,NULL,NULL,'2023-11-28 00:00:00',NULL,1),(29,6,9,1,1,1,1,'2023-11-29 00:00:00',NULL,0),(30,4,17,1,1,1,1,NULL,NULL,1),(31,4,18,1,1,0,1,NULL,NULL,1);
/*!40000 ALTER TABLE `MS_ROLES_PERMISOS` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `MS_USUARIOS`
--

DROP TABLE IF EXISTS `MS_USUARIOS`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `MS_USUARIOS` (
  `COD_USUARIO` int NOT NULL AUTO_INCREMENT,
  `USUARIO` varchar(100) DEFAULT NULL,
  `CONTRASENA` varchar(100) DEFAULT NULL,
  `PRIMER_INGRESO` tinyint(1) DEFAULT NULL,
  `FECHA_CREACION` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `MODIFICADO_POR` varchar(100) DEFAULT NULL,
  `COD_ESTADO_USUARIO` bigint DEFAULT NULL,
  `N_INTENTOS` int DEFAULT '0',
  `COD_PERSONA` bigint DEFAULT NULL,
  `Estado_registro` int DEFAULT '1',
  `COD_ROL` int DEFAULT NULL,
  PRIMARY KEY (`COD_USUARIO`),
  UNIQUE KEY `USUARIO_UNIQUE` (`USUARIO`),
  UNIQUE KEY `COD_PERSONA_UNIQUE` (`COD_PERSONA`),
  KEY `cod_rol_idx` (`COD_ROL`),
  KEY `fk_cod_rol_idx` (`COD_ROL`),
  CONSTRAINT `fk_cod_persona` FOREIGN KEY (`COD_PERSONA`) REFERENCES `MP_PERSONAS` (`COD_PERSONA`),
  CONSTRAINT `fk_cod_rol` FOREIGN KEY (`COD_ROL`) REFERENCES `MS_ROLES` (`COD_ROL`)
) ENGINE=InnoDB AUTO_INCREMENT=22 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `MS_USUARIOS`
--

LOCK TABLES `MS_USUARIOS` WRITE;
/*!40000 ALTER TABLE `MS_USUARIOS` DISABLE KEYS */;
INSERT INTO `MS_USUARIOS` VALUES (1,'JOSUE','123',0,NULL,NULL,1,0,5,1,4),(2,'EMERAZ','123',0,'2023-11-30 20:23:18',NULL,1,0,1,1,4),(19,'PONCE','123',1,'2023-12-01 06:00:00',NULL,1,0,3,1,4),(21,'LUISA','123',1,'2023-12-01 06:00:00','JOSUE',1,0,4,1,4);
/*!40000 ALTER TABLE `MS_USUARIOS` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_unicode_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`axe`@`%`*/ /*!50003 TRIGGER `TRIGGER_BITACORA_UPDATE_MS_USUARIOS1` AFTER UPDATE ON `MS_USUARIOS` FOR EACH ROW BEGIN
    -- INSERTAR LOS VALORES ANTIGUOS Y NUEVOS EN LA TABLA BITACORA
    INSERT INTO BITACORA (
        NOMBRE_TABLA, MODULO_TABLA, TIPO_EVENTO, FECHA_REGISTRO, FECHA_MODIFICACION, USUARIO,
        COD_REGISTRO_TABLA, PRIMERA_FK, SEGUNDA_FK, TERCERA_FK, CAMPO1_VIEJO, CAMPO2_VIEJO, CAMPO3_VIEJO, CAMPO4_VIEJO, CAMPO5_VIEJO, CAMPO6_VIEJO,
        CAMPO7_VIEJO, CAMPO8_VIEJO, CAMPO9_VIEJO, CAMPO10_NUEVO, CAMPO11_NUEVO, CAMPO12_NUEVO,
        CAMPO13_NUEVO, CAMPO14_NUEVO, CAMPO15_NUEVO, CAMPO16_NUEVO, CAMPO17_NUEVO, CAMPO18_NUEVO
    )
    VALUES (
        'MS_USUARIOS', 'MODULO SEGURIDAD', 'UPDATE', OLD.FECHA_CREACION, NOW(), NEW.MODIFICADO_POR,
        OLD.COD_USUARIO, OLD.COD_PERSONA, OLD.COD_ESTADO_USUARIO, NULL, OLD.USUARIO,  CONCAT('......'), OLD.PRIMER_INGRESO, OLD.FECHA_CREACION, OLD.MODIFICADO_POR, NULL, NULL, NULL, NULL,
        NEW.USUARIO, CONCAT('......'), NEW.PRIMER_INGRESO, NEW.FECHA_CREACION, NEW.MODIFICADO_POR, NULL, NULL, NULL, NULL
    );
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `REL_NIVACAD_ANIOACAD`
--

DROP TABLE IF EXISTS `REL_NIVACAD_ANIOACAD`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `REL_NIVACAD_ANIOACAD` (
  `COD_NIVACAD_ANIOACAD` varchar(6) NOT NULL,
  `COD_NIVEL_ACADEMICO` bigint DEFAULT NULL,
  `COD_ANIO_ACADEMICO` bigint DEFAULT NULL,
  PRIMARY KEY (`COD_NIVACAD_ANIOACAD`),
  KEY `COD_NIVEL_ACADEMICO` (`COD_NIVEL_ACADEMICO`),
  KEY `COD_ANIO_ACADEMICO` (`COD_ANIO_ACADEMICO`),
  CONSTRAINT `REL_NIVACAD_ANIOACAD_ibfk_1` FOREIGN KEY (`COD_NIVEL_ACADEMICO`) REFERENCES `MA_NIVEL_ACADEMICO` (`COD_NIVEL_ACADEMICO`),
  CONSTRAINT `REL_NIVACAD_ANIOACAD_ibfk_2` FOREIGN KEY (`COD_ANIO_ACADEMICO`) REFERENCES `MA_ANIO_ACADEMICO` (`COD_ANIO_ACADEMICO`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `REL_NIVACAD_ANIOACAD`
--

LOCK TABLES `REL_NIVACAD_ANIOACAD` WRITE;
/*!40000 ALTER TABLE `REL_NIVACAD_ANIOACAD` DISABLE KEYS */;
/*!40000 ALTER TABLE `REL_NIVACAD_ANIOACAD` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `RE_NIVACAD_ANIOACAD_SECCIONES`
--

DROP TABLE IF EXISTS `RE_NIVACAD_ANIOACAD_SECCIONES`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `RE_NIVACAD_ANIOACAD_SECCIONES` (
  `COD_REL_ANIOACAD` bigint NOT NULL AUTO_INCREMENT,
  `COD_NIVACAD_ANIOACAD` varchar(6) DEFAULT NULL,
  `COD_SECCIONES` bigint DEFAULT NULL,
  `COD_JORNADA` bigint DEFAULT NULL,
  PRIMARY KEY (`COD_REL_ANIOACAD`),
  KEY `COD_NIVACAD_ANIOACAD` (`COD_NIVACAD_ANIOACAD`),
  KEY `COD_SECCIONES` (`COD_SECCIONES`),
  KEY `COD_JORNADA` (`COD_JORNADA`),
  CONSTRAINT `RE_NIVACAD_ANIOACAD_SECCIONES_ibfk_1` FOREIGN KEY (`COD_NIVACAD_ANIOACAD`) REFERENCES `REL_NIVACAD_ANIOACAD` (`COD_NIVACAD_ANIOACAD`),
  CONSTRAINT `RE_NIVACAD_ANIOACAD_SECCIONES_ibfk_2` FOREIGN KEY (`COD_SECCIONES`) REFERENCES `MA_SECCIONES` (`COD_SECCIONES`),
  CONSTRAINT `RE_NIVACAD_ANIOACAD_SECCIONES_ibfk_3` FOREIGN KEY (`COD_JORNADA`) REFERENCES `MA_JORNADA` (`COD_JORNADA`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `RE_NIVACAD_ANIOACAD_SECCIONES`
--

LOCK TABLES `RE_NIVACAD_ANIOACAD_SECCIONES` WRITE;
/*!40000 ALTER TABLE `RE_NIVACAD_ANIOACAD_SECCIONES` DISABLE KEYS */;
/*!40000 ALTER TABLE `RE_NIVACAD_ANIOACAD_SECCIONES` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `failed_jobs`
--

DROP TABLE IF EXISTS `failed_jobs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `failed_jobs` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT,
  `uuid` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `connection` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `queue` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `payload` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `exception` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `failed_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE KEY `failed_jobs_uuid_unique` (`uuid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `failed_jobs`
--

LOCK TABLES `failed_jobs` WRITE;
/*!40000 ALTER TABLE `failed_jobs` DISABLE KEYS */;
/*!40000 ALTER TABLE `failed_jobs` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `migrations`
--

DROP TABLE IF EXISTS `migrations`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `migrations` (
  `id` int unsigned NOT NULL AUTO_INCREMENT,
  `migration` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `batch` int NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `migrations`
--

LOCK TABLES `migrations` WRITE;
/*!40000 ALTER TABLE `migrations` DISABLE KEYS */;
/*!40000 ALTER TABLE `migrations` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `password_resets`
--

DROP TABLE IF EXISTS `password_resets`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `password_resets` (
  `email` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `token` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  KEY `password_resets_email_index` (`email`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `password_resets`
--

LOCK TABLES `password_resets` WRITE;
/*!40000 ALTER TABLE `password_resets` DISABLE KEYS */;
/*!40000 ALTER TABLE `password_resets` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `personal_access_tokens`
--

DROP TABLE IF EXISTS `personal_access_tokens`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `personal_access_tokens` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT,
  `tokenable_type` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `tokenable_id` bigint unsigned NOT NULL,
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `token` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `abilities` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `last_used_at` timestamp NULL DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `personal_access_tokens_token_unique` (`token`),
  KEY `personal_access_tokens_tokenable_type_tokenable_id_index` (`tokenable_type`,`tokenable_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `personal_access_tokens`
--

LOCK TABLES `personal_access_tokens` WRITE;
/*!40000 ALTER TABLE `personal_access_tokens` DISABLE KEYS */;
/*!40000 ALTER TABLE `personal_access_tokens` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `sessions`
--

DROP TABLE IF EXISTS `sessions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `sessions` (
  `id` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `user_id` bigint unsigned DEFAULT NULL,
  `ip_address` varchar(45) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `user_agent` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `payload` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `last_activity` int NOT NULL,
  PRIMARY KEY (`id`),
  KEY `sessions_user_id_index` (`user_id`),
  KEY `sessions_last_activity_index` (`last_activity`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `sessions`
--

LOCK TABLES `sessions` WRITE;
/*!40000 ALTER TABLE `sessions` DISABLE KEYS */;
INSERT INTO `sessions` VALUES ('4YkbB3FULULl1XZqf3AbjR8LlIJujGLuDimaVGXb',NULL,'127.0.0.1','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36','YTozOntzOjY6Il90b2tlbiI7czo0MDoiVVVsQXkxSU1nQlJFbFhjVzV3ZUVCeU5SeE9GZGlGd1JIUlk4dXhXQyI7czo5OiJfcHJldmlvdXMiO2E6MTp7czozOiJ1cmwiO3M6Mzc6Imh0dHA6Ly8xMjcuMC4wLjE6ODAwMC9SZXBvcnRlYml0YWNvcmEiO31zOjY6Il9mbGFzaCI7YToyOntzOjM6Im9sZCI7YTowOnt9czozOiJuZXciO2E6MDp7fX19',1701497247),('IkG9gfHJDAp9UVoxsjaEgXmpDqMvgFT4HnzHKAkE',NULL,'127.0.0.1','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36 Edg/119.0.0.0','YTozOntzOjY6Il90b2tlbiI7czo0MDoiT1ROWTFRamtKblpQdkVhc051aUFNdkU0QjFxWG85NXhhRlBHVU8wQSI7czo5OiJfcHJldmlvdXMiO2E6MTp7czozOiJ1cmwiO3M6MzE6Imh0dHA6Ly8xMjcuMC4wLjE6ODAwMC9tYXRyaWN1bGEiO31zOjY6Il9mbGFzaCI7YToyOntzOjM6Im9sZCI7YTowOnt9czozOiJuZXciO2E6MDp7fX19',1701493044),('rmIYVnaf3giS6sFC5RbwbhE0JqCfmdCmpdcePObq',NULL,'181.115.59.84','Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36 Edg/119.0.0.0','YTozOntzOjY6Il90b2tlbiI7czo0MDoiV1pHd05sdEoxa1UzTXJFNzJsNEYyNDBPVENYRldZVGdhM0dZcWdteiI7czo5OiJfcHJldmlvdXMiO2E6MTp7czozOiJ1cmwiO3M6Mzk6Imh0dHA6Ly9zaXN0ZW1hLmFsaWFkb3N4ZWR1Y2EuY29tL2JhY2t1cCI7fXM6NjoiX2ZsYXNoIjthOjI6e3M6Mzoib2xkIjthOjA6e31zOjM6Im5ldyI7YTowOnt9fX0=',1701496667);
/*!40000 ALTER TABLE `sessions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tabla_registro_errores`
--

DROP TABLE IF EXISTS `tabla_registro_errores`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `tabla_registro_errores` (
  `COD_RERROR` bigint NOT NULL AUTO_INCREMENT,
  `descripcion` varchar(255) DEFAULT NULL,
  `codigo_error` int DEFAULT NULL,
  `fecha` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`COD_RERROR`)
) ENGINE=InnoDB AUTO_INCREMENT=79 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tabla_registro_errores`
--

LOCK TABLES `tabla_registro_errores` WRITE;
/*!40000 ALTER TABLE `tabla_registro_errores` DISABLE KEYS */;
INSERT INTO `tabla_registro_errores` VALUES (48,'Cannot add or update a child row: a foreign key constraint fails (`axe`.`ME_PADRES_TUTORES`, CONSTRAINT `ME_PADRES_TUTORES_ibfk_1` FOREIGN KEY (`COD_PERSONA`) REFERENCES `MP_PERSONAS` (`COD_PERSONA`))',1452,'2023-10-10 04:35:13'),(49,'Cannot add or update a child row: a foreign key constraint fails (`axe`.`ME_PADRES_TUTORES`, CONSTRAINT `ME_PADRES_TUTORES_ibfk_1` FOREIGN KEY (`COD_PERSONA`) REFERENCES `MP_PERSONAS` (`COD_PERSONA`))',1452,'2023-10-21 21:13:39'),(50,'Cannot add or update a child row: a foreign key constraint fails (`axe`.`ME_PADRES_TUTORES`, CONSTRAINT `ME_PADRES_TUTORES_ibfk_1` FOREIGN KEY (`COD_PERSONA`) REFERENCES `MP_PERSONAS` (`COD_PERSONA`))',1452,'2023-10-21 21:13:52'),(51,'Cannot add or update a child row: a foreign key constraint fails (`axe`.`ME_PADRES_TUTORES`, CONSTRAINT `ME_PADRES_TUTORES_ibfk_1` FOREIGN KEY (`COD_PERSONA`) REFERENCES `MP_PERSONAS` (`COD_PERSONA`))',1452,'2023-10-22 05:11:43'),(52,'Cannot add or update a child row: a foreign key constraint fails (`axe`.`ME_PADRES_TUTORES`, CONSTRAINT `ME_PADRES_TUTORES_ibfk_1` FOREIGN KEY (`COD_PERSONA`) REFERENCES `MP_PERSONAS` (`COD_PERSONA`))',1452,'2023-10-24 04:41:57'),(53,'Cannot add or update a child row: a foreign key constraint fails (`axe`.`ME_PADRES_TUTORES`, CONSTRAINT `ME_PADRES_TUTORES_ibfk_1` FOREIGN KEY (`COD_PERSONA`) REFERENCES `MP_PERSONAS` (`COD_PERSONA`))',1452,'2023-10-24 04:43:41'),(54,'FuniÃ³n NO VALIDA.',1644,'2023-11-09 14:24:25'),(55,'Cannot add or update a child row: a foreign key constraint fails (`axe`.`MDA_DOCENTES_ASIGNATURAS`, CONSTRAINT `MDA_DOCENTES_ASIGNATURAS_ibfk_2` FOREIGN KEY (`COD_DOCENTE`) REFERENCES `MD_DOCENTES` (`COD_DOCENTE`))',1452,'2023-11-11 21:07:11'),(56,'Cannot add or update a child row: a foreign key constraint fails (`axe`.`MDA_DOCENTES_ASIGNATURAS`, CONSTRAINT `MDA_DOCENTES_ASIGNATURAS_ibfk_2` FOREIGN KEY (`COD_DOCENTE`) REFERENCES `MD_DOCENTES` (`COD_DOCENTE`))',1452,'2023-11-11 21:14:02'),(57,'Cannot add or update a child row: a foreign key constraint fails (`axe`.`MDA_DOCENTES_ASIGNATURAS`, CONSTRAINT `MDA_DOCENTES_ASIGNATURAS_ibfk_2` FOREIGN KEY (`COD_DOCENTE`) REFERENCES `MD_DOCENTES` (`COD_DOCENTE`))',1452,'2023-11-11 21:15:39'),(58,'Cannot add or update a child row: a foreign key constraint fails (`axe`.`MP_TELEFONOS`, CONSTRAINT `MP_TELEFONOS_ibfk_1` FOREIGN KEY (`COD_PERSONA`) REFERENCES `MP_PERSONAS` (`COD_PERSONA`))',1452,'2023-11-13 14:36:33'),(59,'Cannot add or update a child row: a foreign key constraint fails (`axe`.`MP_TELEFONOS`, CONSTRAINT `MP_TELEFONOS_ibfk_1` FOREIGN KEY (`COD_PERSONA`) REFERENCES `MP_PERSONAS` (`COD_PERSONA`))',1452,'2023-11-13 14:36:35'),(60,'Cannot add or update a child row: a foreign key constraint fails (`axe`.`MP_TELEFONOS`, CONSTRAINT `MP_TELEFONOS_ibfk_1` FOREIGN KEY (`COD_PERSONA`) REFERENCES `MP_PERSONAS` (`COD_PERSONA`))',1452,'2023-11-13 14:37:07'),(61,'Cannot add or update a child row: a foreign key constraint fails (`axe`.`ME_PADRES_TUTORES`, CONSTRAINT `ME_PADRES_TUTORES_ibfk_1` FOREIGN KEY (`COD_PERSONA`) REFERENCES `MP_PERSONAS` (`COD_PERSONA`))',1452,'2023-11-13 14:58:39'),(62,'Unknown column \'PV_USUARIO_MODIFICADOR\' in \'field list\'',1054,'2023-11-16 05:35:59'),(63,'Unknown column \'PV_USUARIO_MODIFICADOR\' in \'field list\'',1054,'2023-11-16 05:36:17'),(64,'Unknown column \'PV_USUARIO_MODIFICADOR\' in \'field list\'',1054,'2023-11-18 05:19:56'),(65,'Unknown column \'PV_USUARIO_MODIFICADOR\' in \'field list\'',1054,'2023-11-18 05:24:30'),(66,'Incorrect date value: \'2023-11-18 00:04:12\' for column \'FECHA_REGISTRO\' at row 1',1292,'2023-11-18 06:04:12'),(67,'Column \'COD_PERSONA\' in where clause is ambiguous',1052,'2023-11-25 08:43:47'),(68,'Unknown column \'PV_COD_PERSONA\' in \'where clause\'',1054,'2023-11-29 08:00:18'),(69,'Unknown column \'PV_COD_PERSONA\' in \'where clause\'',1054,'2023-11-29 08:04:31'),(70,'Unknown column \'USUARIO\' in \'field list\'',1054,'2023-11-29 08:06:58'),(71,'Duplicate entry \'0801197803340\' for key \'MP_PERSONAS.UNQ_IDENTIDAD\'',1062,'2023-11-29 17:36:15'),(72,'Duplicate entry \'0801197803340\' for key \'MP_PERSONAS.UNQ_IDENTIDAD\'',1062,'2023-11-29 17:37:48'),(73,'Duplicate entry \'0801197803340\' for key \'MP_PERSONAS.UNQ_IDENTIDAD\'',1062,'2023-11-30 05:31:57'),(74,'Duplicate entry \'0801197803340\' for key \'MP_PERSONAS.UNQ_IDENTIDAD\'',1062,'2023-11-30 05:40:54'),(75,'Duplicate entry \'0801197803340\' for key \'MP_PERSONAS.UNQ_IDENTIDAD\'',1062,'2023-11-30 05:48:11'),(76,'Duplicate entry \'0801197803340\' for key \'MP_PERSONAS.UNQ_IDENTIDAD\'',1062,'2023-11-30 05:49:06'),(77,'Duplicate entry \'0801197803340\' for key \'MP_PERSONAS.UNQ_IDENTIDAD\'',1062,'2023-11-30 05:53:12'),(78,'Duplicate entry \'0801197803340\' for key \'MP_PERSONAS.UNQ_IDENTIDAD\'',1062,'2023-11-30 05:57:23');
/*!40000 ALTER TABLE `tabla_registro_errores` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `users` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `email` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `email_verified_at` timestamp NULL DEFAULT NULL,
  `password` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `two_factor_secret` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `two_factor_recovery_codes` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `two_factor_confirmed_at` timestamp NULL DEFAULT NULL,
  `remember_token` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `current_team_id` bigint unsigned DEFAULT NULL,
  `profile_photo_path` varchar(2048) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `users_email_unique` (`email`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users`
--

LOCK TABLES `users` WRITE;
/*!40000 ALTER TABLE `users` DISABLE KEYS */;
/*!40000 ALTER TABLE `users` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping routines for database 'axe'
--
/*!50003 DROP PROCEDURE IF EXISTS `MS_ACCESO_PERMITIDO` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`axe`@`%` PROCEDURE `MS_ACCESO_PERMITIDO`(
   IN PV_USUARIO VARCHAR(50),
   IN PV_OBJETO VARCHAR(100)
)
BEGIN
-- 1 SI 0 NO
 DECLARE Permitido INT(100);  -- Variable para almacenar el mensaje
	-- DECLARE mensaje VARCHAR(100);  -- Variable para almacenar el mensaje
  
  
    IF(EXISTS(SELECT USUARIO.USUARIO, OBJETO.OBJETO FROM MS_ROLES_PERMISOS ROL_PERM
			INNER JOIN MS_ROLES ROL
			ON ROL_PERM.COD_ROL = ROL.COD_ROL
			INNER JOIN MS_OBJETOS OBJETO
			ON ROL_PERM.COD_OBJETO = OBJETO.COD_OBJETO
			INNER JOIN MS_USUARIOS USUARIO
			ON ROL.COD_ROL = USUARIO.COD_ROL
			WHERE USUARIO.USUARIO = PV_USUARIO AND OBJETO.OBJETO = PV_OBJETO
)) THEN
		BEGIN 
			SET PERMITIDO = 1 ;
			SELECT PERMITIDO;  -- Devolvemos el mensaje
		END;
	ELSE
		BEGIN
			SET PERMITIDO = 0;
			SELECT PERMITIDO;  -- Devolvemos el mensaje
		END;
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `MS_ACCESO_PERMITIDO1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`axe`@`%` PROCEDURE `MS_ACCESO_PERMITIDO1`(
   IN PV_USUARIO VARCHAR(50),
   IN PV_OBJETO VARCHAR(100)
)
BEGIN
-- 1 SI 0 NO
 DECLARE Permitido INT(100);  -- Variable para almacenar el mensaje
	-- DECLARE mensaje VARCHAR(100);  -- Variable para almacenar el mensaje
  
  
    IF(EXISTS(SELECT USUARIO.USUARIO, OBJETO.OBJETO FROM MS_ROLES_PERMISOS ROL_PERM
			INNER JOIN MS_ROLES ROL
			ON ROL_PERM.COD_ROL = ROL.COD_ROL
			INNER JOIN MS_OBJETOS OBJETO
			ON ROL_PERM.COD_OBJETO = OBJETO.COD_OBJETO
			INNER JOIN MS_USUARIOS USUARIO
			ON ROL.COD_ROL = USUARIO.COD_ROL
			WHERE USUARIO.USUARIO = PV_USUARIO AND OBJETO.OBJETO = PV_OBJETO
)) THEN
		BEGIN 
			SET PERMITIDO = 1 ;
			SELECT PERMITIDO;  -- Devolvemos el mensaje
		END;
	ELSE
		BEGIN
			SET PERMITIDO = 0;
			SELECT PERMITIDO;  -- Devolvemos el mensaje
		END;
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `MS_Autenticacion` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`axe`@`%` PROCEDURE `MS_Autenticacion`(
   IN PV_USUARIO VARCHAR(50), 
   IN PV_CONTRASENA VARCHAR(50)
)
BEGIN
    DECLARE mensaje VARCHAR(100);  -- Variable para almacenar el mensaje
    DECLARE numeroIntentos INT;
	DECLARE VALOR_COD_USUARIO INT;
	DECLARE intentosPermitidos INT;

    IF EXISTS (SELECT * FROM MS_USUARIOS WHERE USUARIO = PV_USUARIO AND Estado_registro = 1) THEN
		sp: BEGIN 
        
			-- -- Obtenemos el numero de intentos que tienen permitodos los usuarios
            SET intentosPermitidos = (SELECT VALOR FROM MS_PARAMETROS WHERE PARAMETRO = 'ACCESO_INTENTOS');
			-- Obtenemos el numero de intentos del usuario
			SET numeroIntentos = (SELECT N_INTENTOS FROM MS_USUARIOS WHERE USUARIO = PV_USUARIO);
            -- Obtenemos el COD del usuario para hacer una actualizacion con llave primario
            SET VALOR_COD_USUARIO = (SELECT COD_USUARIO FROM MS_USUARIOS WHERE USUARIO = PV_USUARIO);
			
            UPDATE MS_USUARIOS SET N_INTENTOS = (numeroIntentos + 1)
            WHERE COD_USUARIO = VALOR_COD_USUARIO; 
            
            -- Al numero de intentos que teniamos le sumamos 1
            SET numeroIntentos = numeroIntentos + 1;
            
            IF (numeroIntentos	<= intentosPermitidos) THEN
				BEGIN 
                  IF  EXISTS (SELECT * FROM MS_USUARIOS WHERE USUARIO = PV_USUARIO AND CONTRASENA = PV_CONTRASENA  AND COD_ESTADO_USUARIO = 1)  THEN
					BEGIN 
						SELECT * FROM MS_USUARIOS WHERE USUARIO = PV_USUARIO AND CONTRASENA = PV_CONTRASENA;
                       
                        UPDATE MS_USUARIOS SET N_INTENTOS = 0 
                        WHERE COD_USUARIO = VALOR_COD_USUARIO;
                        LEAVE sp;
                    END;
                  ELSE
					BEGIN 
                     SET mensaje = CONCAT('Usuario o contraseÃ±a invÃ¡lidos.');
                      SELECT mensaje AS mensaje;  -- Devolvemos el mensaje
                      LEAVE sp;
                    END;
                  END IF;    
				END;
			ELSE
				BEGIN 
                    -- Cambiamos el estado del usuario a inactivo
                    UPDATE MS_USUARIOS SET COD_ESTADO_USUARIO = 2
					WHERE COD_USUARIO = VALOR_COD_USUARIO; 
                    
                    SET mensaje = CONCAT('Acceso bloqueado');
					SELECT mensaje AS mensaje;  -- Devolvemos el mensaje
                    LEAVE sp;
                END;
            END IF;       
			 
		END;
    END IF;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `MS_buscarUsuario` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`axe`@`%` PROCEDURE `MS_buscarUsuario`(
   IN PV_USUARIO VARCHAR(50)
)
BEGIN
    DECLARE mensaje VARCHAR(100);  -- Variable para almacenar el mensaje
    DECLARE VAR_COD_PERSONA BIGINT;

	IF (EXISTS (SELECT * FROM MS_USUARIOS WHERE USUARIO = PV_USUARIO AND PRIMER_INGRESO = 0)) THEN
        sp: BEGIN
            SELECT * FROM MS_USUARIOS WHERE USUARIO = PV_USUARIO;
            LEAVE sp;
        END;
        
	ELSEIF (EXISTS(SELECT CORREO_ELECTRONICO FROM MP_CORREOS WHERE CORREO_ELECTRONICO = PV_USUARIO)) THEN
        sp: BEGIN
			SET VAR_COD_PERSONA = (SELECT COD_PERSONA FROM MP_CORREOS WHERE CORREO_ELECTRONICO = PV_USUARIO);
            SELECT * FROM MS_USUARIOS WHERE COD_PERSONA = VAR_COD_PERSONA;
            LEAVE sp;
        END;
    ELSE
        BEGIN
            SET mensaje = 'Holiwis chat :)';
            SELECT mensaje AS mensaje;  -- Devolvemos el mensaje
        END;
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `MS_cambiarContrasena` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`axe`@`%` PROCEDURE `MS_cambiarContrasena`(
   IN PV_USUARIO VARCHAR(50), 
   IN PV_CONTRASENA VARCHAR(50)
)
BEGIN    
	DECLARE mensaje VARCHAR(100);  -- Variable para almacenar el mensaje
    DECLARE VALOR_COD_USUARIO INT;
    IF EXISTS (SELECT * FROM MS_USUARIOS WHERE USUARIO = PV_USUARIO  AND COD_ESTADO_USUARIO = 1) THEN
		sp: BEGIN 
        
			SET VALOR_COD_USUARIO = (SELECT COD_USUARIO FROM MS_USUARIOS WHERE USUARIO = PV_USUARIO);
			UPDATE MS_USUARIOS SET CONTRASENA = PV_CONTRASENA
            WHERE COD_USUARIO = VALOR_COD_USUARIO; 
             
             IF((SELECT PRIMER_INGRESO FROM MS_USUARIOS WHERE USUARIO = PV_USUARIO) = 1) THEN
             BEGIN 
					UPDATE MS_USUARIOS SET PRIMER_INGRESO = 0
					WHERE COD_USUARIO = VALOR_COD_USUARIO; 
             END;
             END IF;
             
             
            SET mensaje = CONCAT('ContraseÃ±a actualizada exitosamente');
			SELECT mensaje AS mensaje;  -- Devolvemos el mensaje
            LEAVE sp;
		END;
	ELSE
		sp: BEGIN 
            SET mensaje = CONCAT('Ha ocurrido un problema');
			SELECT mensaje AS mensaje;  -- Devolvemos el mensaje
            LEAVE sp;
		END;
    END IF;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `MS_CODIGO_USUARIO` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`axe`@`%` PROCEDURE `MS_CODIGO_USUARIO`(
   IN PV_USUARIO VARCHAR(50)
)
BEGIN
 DECLARE mensaje VARCHAR(100);  -- Variable para almacenar el mensaje
	-- DECLARE mensaje VARCHAR(100);  -- Variable para almacenar el mensaje
     IF EXISTS( SELECT COD_USUARIO  FROM MS_USUARIOS WHERE USUARIO = PV_USUARIO) THEN
		BEGIN 
			SELECT  COD_USUARIO  FROM MS_USUARIOS WHERE USUARIO = PV_USUARIO;
		END;
	ELSE
		BEGIN 
			SET mensaje ='Holiwis chat :)';
			SELECT mensaje AS mensaje;  -- Devolvemos el mensaje
		END;
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `MS_CUENTA_PREGUNTAS` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`axe`@`%` PROCEDURE `MS_CUENTA_PREGUNTAS`(
   IN PV_USUARIO VARCHAR(100),
   IN PV_COD_USUARIO INT
)
BEGIN
 DECLARE mensaje VARCHAR(100);  -- Variable para almacenar el mensaje
	-- DECLARE mensaje VARCHAR(100);  -- Variable para almacenar el mensaje
     IF (SELECT PRIMER_INGRESO FROM MS_USUARIOS WHERE USUARIO = PV_USUARIO) <> 0 THEN
		BEGIN 
			SELECT COUNT(*) FROM MS_REL_PREGUNTA_USUARIO WHERE COD_USUARIO = PV_COD_USUARIO;
		END;
	ELSE
    BEGIN 
		SET mensaje ='Holiwis chat :)';
		SELECT mensaje AS mensaje;  -- Devolvemos el mensaje
    END;
    
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `MS_PREGUNTAS_SEGURIDAD` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`axe`@`%` PROCEDURE `MS_PREGUNTAS_SEGURIDAD`(
   IN PV_USUARIO VARCHAR(50)
)
BEGIN
 DECLARE mensaje VARCHAR(100);  -- Variable para almacenar el mensaje
 DECLARE VAR_COD_USUARIO BIGINT;
	-- DECLARE mensaje VARCHAR(100);  -- Variable para almacenar el mensaje
    
    SET VAR_COD_USUARIO = (SELECT COD_USUARIO FROM MS_USUARIOS WHERE USUARIO = PV_USUARIO);

	SELECT * FROM MS_PREGUNTAS
	WHERE COD_PREGUNTA NOT IN(SELECT COD_PREGUNTA FROM MS_REL_PREGUNTA_USUARIO WHERE COD_USUARIO = VAR_COD_USUARIO);

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `MS_PRIMER_INGRESO` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`axe`@`%` PROCEDURE `MS_PRIMER_INGRESO`(
   IN PV_USUARIO VARCHAR(50)
)
BEGIN
 DECLARE mensaje VARCHAR(100);  -- Variable para almacenar el mensaje
	-- DECLARE mensaje VARCHAR(100);  -- Variable para almacenar el mensaje
     IF (SELECT PRIMER_INGRESO FROM MS_USUARIOS WHERE USUARIO = PV_USUARIO) <> 0 THEN
		BEGIN 
			SELECT  *  FROM MS_USUARIOS WHERE USUARIO = PV_USUARIO;
		END;
	ELSE
    BEGIN 
		SET mensaje ='Holiwis chat :)';
		SELECT mensaje AS mensaje;  -- Devolvemos el mensaje
    END;
    
	END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `personas_lic` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`axe`@`%` PROCEDURE `personas_lic`(
    IN funcion varchar (2),
    IN PV_USUARIO VARCHAR(150),
   -- parametros tabla personas
    IN PBI_COD_PERSONA BIGINT,
    IN PV_NOMBRE VARCHAR(150),
    IN PV_APELLIDO VARCHAR(150),
    IN PI_IDENTIDAD VARCHAR(150),
    IN PV_GENERO VARCHAR(150),
    IN PV_TIPO_PERSONA VARCHAR(150),
    IN PI_EDAD INT,
    IN PD_FECHA_NACIMIENTO DATE,
   
    -- parametros tabla telefono
    -- IN PBI_COD_TELEFONO BIGINT,
	IN PV_TELEFONO VARCHAR(20),
    IN PV_TIPO_TELEFONO VARCHAR(50),
    -- parametros tabla direcciones
   -- IN PBI_COD_DIRECCION BIGINT,
	IN PV_DIRECCION VARCHAR(255),
    IN PV_DEPARTAMENTO VARCHAR(100),
    IN PV_CIUDAD VARCHAR(100),
    IN PV_PAIS VARCHAR(100),
    -- parametros tabla contacto
    -- IN PBI_COD_CONTACTO_EMERGENCIA BIGINT,
     IN PV_NOMBRE_CONTACTO VARCHAR(255),
    IN PV_APELLIDO_CONTACTO VARCHAR(255),
    IN PV_TELEFONO_CONTACTO VARCHAR(20),
    IN PV_RELACION VARCHAR(100),
     -- parametros tabla correos
	-- IN PBI_COD_CORREO BIGINT,
	IN PV_CORREO_ELECTRONICO VARCHAR(255)
)
BEGIN
    DECLARE error_message TEXT DEFAULT '';
    DECLARE sql_state VARCHAR(5) DEFAULT '';
    DECLARE message TEXT DEFAULT '';
    DECLARE error_code INT DEFAULT 0;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        GET STACKED DIAGNOSTICS CONDITION 1
            error_message = MESSAGE_TEXT,
            sql_state = RETURNED_SQLSTATE,
            error_code = MYSQL_ERRNO,
            message = MESSAGE_TEXT;

        ROLLBACK;
        INSERT INTO tabla_registro_errores (descripcion, codigo_error, fecha)
        VALUES (error_message, error_code, CURRENT_TIMESTAMP);
        RESIGNAL;
    END;
 
    START TRANSACTION;
    
     IF funcion = 'I' THEN
      -- insert personas
    INSERT INTO MP_PERSONAS (NOMBRE, APELLIDO, IDENTIDAD, GENERO, TIPO_PERSONA, EDAD, FECHA_NACIMIENTO, FECHA_REGISTRO, USUARIO_MODIFICADOR)
            VALUES (PV_NOMBRE, PV_APELLIDO, PI_IDENTIDAD, PV_GENERO, PV_TIPO_PERSONA, PI_EDAD, PD_FECHA_NACIMIENTO,  CURRENT_TIMESTAMP, PV_USUARIO);
 
    set PBI_COD_PERSONA =  LAST_INSERT_ID();
  -- insert telefonos
    INSERT INTO MP_TELEFONOS (COD_PERSONA, TELEFONO, TIPO_TELEFONO, FECHA, USUARIO_MODIFICADOR)
    VALUES (PBI_COD_PERSONA, PV_TELEFONO, PV_TIPO_TELEFONO, CURRENT_TIMESTAMP,PV_USUARIO);
-- insert direcciones
    INSERT INTO MP_DIRECCIONES (COD_PERSONA, DIRECCION, DEPARTAMENTO, CIUDAD, PAIS,FECHA,USUARIO_MODIFICADOR)
    VALUES (PBI_COD_PERSONA, PV_DIRECCION, PV_DEPARTAMENTO, PV_CIUDAD, PV_PAIS,CURRENT_TIMESTAMP, PV_USUARIO);
-- insert contactos
 INSERT INTO MP_CONTACTOS_EMERGENCIA (COD_PERSONA, NOMBRE_CONTACTO, APELLIDO_CONTACTO, TELEFONO, RELACION, FECHA_REGISTRO,USUARIO_MODIFICADOR)
    VALUES (PBI_COD_PERSONA, PV_NOMBRE_CONTACTO, PV_APELLIDO_CONTACTO, PV_TELEFONO_CONTACTO, PV_RELACION,CURRENT_TIMESTAMP, PV_USUARIO);
    -- insertar correos
	INSERT INTO MP_CORREOS (COD_PERSONA, CORREO_ELECTRONICO, USUARIO_MODIFICADOR)
    VALUES (PBI_COD_PERSONA, PV_CORREO_ELECTRONICO, PV_USUARIO);
    
      END IF;
       IF funcion = 'U' THEN
	-- SET COD_RECIBIDO = PBI_COD_PERSONA;
    UPDATE MP_PERSONAS
    SET 
        NOMBRE = PV_NOMBRE,
        APELLIDO = PV_APELLIDO,
        IDENTIDAD = PI_IDENTIDAD,
        GENERO = PV_GENERO,
        TIPO_PERSONA = PV_TIPO_PERSONA,
        EDAD = PI_EDAD,
        FECHA_NACIMIENTO = PD_FECHA_NACIMIENTO,
        USUARIO_MODIFICADOR = PV_USUARIO
    WHERE COD_PERSONA = PBI_COD_PERSONA;
    
    UPDATE MP_TELEFONOS
    SET TELEFONO = PV_TELEFONO, 
        TIPO_TELEFONO = PV_TIPO_TELEFONO, 
        USUARIO_MODIFICADOR = PV_USUARIO
    WHERE COD_TELEFONO = PBI_COD_PERSONA;

    UPDATE MP_DIRECCIONES
    SET DIRECCION = PV_DIRECCION, 
        DEPARTAMENTO = PV_DEPARTAMENTO, 
        CIUDAD = PV_CIUDAD, 
        PAIS = PV_PAIS, 
        USUARIO_MODIFICADOR = PV_USUARIO
    WHERE COD_DIRECCION = PBI_COD_PERSONA;

    UPDATE MP_CONTACTOS_EMERGENCIA
    SET NOMBRE_CONTACTO = PV_NOMBRE_CONTACTO, 
        APELLIDO_CONTACTO = PV_APELLIDO_CONTACTO, 
        TELEFONO = PV_TELEFONO_CONTACTO, 
        RELACION = PV_RELACION, 
        USUARIO_MODIFICADOR = PV_USUARIO
    WHERE COD_CONTACTO_EMERGENCIA = PBI_COD_PERSONA;
END IF;
   
     IF funcion = 'SA' THEN
     SELECT  M_PER.COD_PERSONA, M_TEL.COD_TELEFONO, M_DIR.COD_DIRECCION,  M_CORR.COD_CORREO, M_CONT_E.COD_CONTACTO_EMERGENCIA,  
    M_PER.NOMBRE ,  M_PER.APELLIDO,  M_PER.IDENTIDAD,  M_PER.GENERO,  M_PER.TIPO_PERSONA, M_PER.EDAD,  M_PER.FECHA_NACIMIENTO, M_PER.FECHA_REGISTRO,
	M_TEL.TELEFONO , M_TEL.TIPO_TELEFONO,
	M_DIR.DIRECCION, M_DIR.DEPARTAMENTO, M_DIR.CIUDAD, M_DIR.PAIS,
	M_CORR.CORREO_ELECTRONICO,
	M_CONT_E.NOMBRE_CONTACTO, M_CONT_E.APELLIDO_CONTACTO, M_CONT_E.TELEFONO AS 'TELEFONO_CONTACTO', M_CONT_E.RELACION
	FROM MP_PERSONAS M_PER
	INNER JOIN MP_TELEFONOS M_TEL
	ON M_PER.COD_PERSONA = M_TEL.COD_PERSONA 
	INNER JOIN MP_DIRECCIONES M_DIR
	ON M_PER.COD_PERSONA = M_DIR.COD_PERSONA 
	INNER JOIN MP_CORREOS M_CORR
	ON M_PER.COD_PERSONA = M_CORR.COD_PERSONA 
	INNER JOIN MP_CONTACTOS_EMERGENCIA M_CONT_E
	ON M_PER.COD_PERSONA = M_CONT_E.COD_PERSONA;
     END IF;
COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SP_INSERT_MS_PREGUNTAS_SEGURIDAD` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`axe`@`%` PROCEDURE `SP_INSERT_MS_PREGUNTAS_SEGURIDAD`(
   IN PV_COD_USUARIO INT,
   IN PV_COD_PREGUNTA INT,
   IN PV_RESPUESTA VARCHAR(255)
)
BEGIN
	INSERT INTO MS_REL_PREGUNTA_USUARIO(COD_PREGUNTA, COD_USUARIO, RESPUESTA) VALUES(
    PV_COD_PREGUNTA, PV_COD_USUARIO, PV_RESPUESTA);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SP_moduloAcademico` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`axe`@`%` PROCEDURE `SP_moduloAcademico`(
    in nombreTabla varchar(100),-- Para ver que tabla va usar el condicional
	in funcion VARCHAR(2),-- Para la funcion que va realizare condicional
	in parametroBI BIGINT,-- Parametro BIGINT
    in parametroINT1 int, -- Parametro entero 1
    in parametroINT2 int, -- Parametro entero 2
    in parametroV1 VARCHAR(255)-- Parametro varchar 1
)
Begin
START TRANSACTION;
      -- 1  TABLA MA_NIVEL_ACADEMICO (
       -- COD_NIVEL_ACADEMICO  = parametroBIG
       -- descripcion  = parametrov1 
		if nombreTabla = 'MA_NIVEL_ACADEMICO' then
        -- funciones
        if funcion = 'I' then -- Insert.
			Insert into MA_NIVEL_ACADEMICO(descripcion) 
			values(parametrov1);
		elseif funcion = 'U' then -- Update.
			Update MA_NIVEL_ACADEMICO set descripcion = parametrov1 where COD_NIVEL_ACADEMICO = parametroBI;
		elseif funcion = 'SA' then -- Select all.
			Select * from MA_NIVEL_ACADEMICO
            WHERE Estado_registro = 1;
		elseif funcion = 'SO' Then -- Select One.
			Select * from MA_NIVEL_ACADEMICO where COD_NIVEL_ACADEMICO = parametroBI;
        elseif funcion = 'DE' Then -- DELETE.
		UPDATE MA_NIVEL_ACADEMICO SET Estado_registro = 0
	    WHERE  COD_NIVEL_ACADEMICO = parametroBI;    
		end if; -- end if funciones
-- FIN Tabla  Nivel Academico

       -- 2 Tabla MA_ANIO_ACADEMICO 
       -- COD_ANIO_ACADEMICO = parametroBI,
       -- descripcion = parametrov1,
        elseif nombreTabla = 'MA_ANIO_ACADEMICO' then
        -- FUNCIONES
         if funcion = 'I' then -- Insert.
			Insert into MA_ANIO_ACADEMICO (descripcion) 
			values(parametrov1);
		elseif funcion = 'U' then -- Update.
			Update MA_ANIO_ACADEMICO  set descripcion = parametrov1 where COD_ANIO_ACADEMICO = parametroBI;
		elseif funcion = 'SA' then -- Select all.
			Select * from MA_ANIO_ACADEMICO 
            WHERE Estado_registro = 1;
		elseif funcion = 'SO' Then -- Select One.
			Select * from MA_ANIO_ACADEMICO  where COD_ANIO_ACADEMICO = parametroBI;
        elseif funcion = 'DE' Then -- DELETE.
		UPDATE MA_ANIO_ACADEMICO SET Estado_registro = 0
	    WHERE  COD_ANIO_ACADEMICO = parametroBI;    
		end if; -- END IF FUNCIONES
     -- FIN Tabla MA_ANIO_ACADEMICO 
        
    
-- 3 Tabla REL_NIVACAD_ANIOACAD
-- COD_NIVACAD_ANIOACAD = parametroV1
-- COD_NIVEL_ACADEMICO  = parametroINT1
-- COD_ANIO_ACADEMICO = parametroINT2
elseif nombreTabla = 'REL_NIVACAD_ANIOACAD' then
    -- FUNCIONES
    if funcion = 'I' then -- Insert.
        Insert into REL_NIVACAD_ANIOACAD(COD_NIVACAD_ANIOACAD, COD_NIVEL_ACADEMICO, COD_ANIO_ACADEMICO) 
        values(parametroV1, parametroINT1, parametroINT2);
    elseif funcion = 'U' then -- Update.
        Update REL_NIVACAD_ANIOACAD set COD_NIVEL_ACADEMICO = parametroINT1, COD_ANIO_ACADEMICO = parametroINT2 where COD_NIVACAD_ANIOACAD = parametroV1;
    elseif funcion = 'SA' then -- Select all.
        Select * from REL_NIVACAD_ANIOACAD;
    elseif funcion = 'SO' Then -- Select One.
        Select * from REL_NIVACAD_ANIOACAD where COD_NIVACAD_ANIOACAD = parametroV1;
    end if; -- END IF FUNCIONES
        -- FIN Tabla 3


        
         -- 4 TABLA  MA_ASIGNATURAS
	-- COD_ASIGNATURA  = parametroBI
    -- NOMBRE_ASIGNATURA = parametrov1
        elseif nombreTabla = 'MA_ASIGNATURAS' then
        -- FUNCIONES
         if funcion = 'I' then -- Insert.
			Insert into MA_ASIGNATURAS(NOMBRE_ASIGNATURA) 
			values(parametrov1);
		elseif funcion = 'U' then -- Update.
			Update MA_ASIGNATURAS set NOMBRE_ASIGNATURA = parametrov1 where COD_ASIGNATURA = parametroBI;
		elseif funcion = 'SA' then -- Select all.
			Select * from MA_ASIGNATURAS
            WHERE Estado_registro = 1;
		elseif funcion = 'SO' Then -- Select One.
			Select * from MA_ASIGNATURAS where COD_ASIGNATURA = parametroBI;
        elseif funcion = 'DE' Then -- DELETE.
		UPDATE MA_ASIGNATURAS  SET Estado_registro = 0
	    WHERE  COD_ASIGNATURA = parametroBI;    
		end if; -- END IF FUNCIONES
        -- FIN MA_ASIGNATURAS
        
         -- 5 TABLA MA_REL_ASIGNATURAS 
-- COD_REL_ASIG = parametroBI
-- COD_ASIGNATURA  = parametroINT1
-- NOMBRE_ASIGNATURA = parametroV1
elseif nombreTabla = 'MA_REL_ASIGNATURAS' then
    -- FUNCIONES
    if funcion = 'I' then -- Insert.
        Insert into MA_REL_ASIGNATURAS(COD_ASIGNATURA, COD_NIVACAD_ANIOACAD) 
        values(parametroINT1, parametroV1);
    elseif funcion = 'U' then -- Update.
        Update MA_REL_ASIGNATURAS set COD_ASIGNATURA = parametroINT1, COD_NIVACAD_ANIOACAD = parametroV1 where COD_REL_ASIG = parametroBI;
    elseif funcion = 'SA' then -- Select all.
        Select * from MA_REL_ASIGNATURAS;
    elseif funcion = 'SO' Then -- Select One.
        Select * from MA_REL_ASIGNATURAS where COD_REL_ASIG = parametroBI;
    end if; -- END IF FUNCIONES
        -- FIN MA_REL_ASIGNATURAS 
        
        
	  -- 6 TABLA MA_JORNADA 
	-- COD_JORNADA = parametroBI
    -- DESCRIPCION_JOR = parametrov1
        elseif nombreTabla = 'MA_JORNADA' then
        -- FUNCIONES
         if funcion = 'I' then -- Insert.
			Insert into MA_JORNADA(DESCRIPCION_JOR) 
			values(parametrov1);
		elseif funcion = 'U' then -- Update.
			Update MA_JORNADA set DESCRIPCION_JOR = parametrov1 where COD_JORNADA = parametroBI;
		elseif funcion = 'SA' then -- Select all.
			Select * from MA_JORNADA
            WHERE Estado_registro = 1;
		elseif funcion = 'SO' Then -- Select One.
			Select * from MA_JORNADA where COD_JORNADA = parametroBI;
        elseif funcion = 'DE' Then -- DELETE.
		UPDATE MA_JORNADA SET Estado_registro = 0
	    WHERE  COD_JORNADA = parametroBI;    
		end if; -- END IF FUNCIONES
        -- FIN MA_JORNADA 
        
        
        -- 7 TABLA MA_SECCIONES 
-- COD_SECCIONES = parametroBI
-- DESCRIPCION_SECCIONES = parametrov1
elseif nombreTabla = 'MA_SECCIONES' then
    -- FUNCIONES
    if funcion = 'I' then -- Insert.
        Insert into MA_SECCIONES(DESCRIPCION_SECCIONES) 
        values(parametrov1);
    elseif funcion = 'U' then -- Update.
        Update MA_SECCIONES set DESCRIPCION_SECCIONES = parametrov1 where COD_SECCIONES = parametroBI;
    elseif funcion = 'SA' then -- Select all.
        Select * from MA_SECCIONES
        WHERE Estado_registro = 1;
    elseif funcion = 'SO' Then -- Select One.
        Select * from MA_SECCIONES where COD_SECCIONES = parametroBI;
    elseif funcion = 'DE' Then -- DELETE.
		UPDATE MA_SECCIONES SET Estado_registro = 0
	    WHERE  COD_SECCIONES = parametroBI;    
    end if; -- END IF FUNCIONES
-- FIN MA_SECCIONES 

        
         -- 8 TABLA RE_NIVACAD_ANIOACAD_SECCIONES 
	     -- COD_REL_ANIOACAD  = parametroBI
         -- COD_NIVACAD_ANIOACAD = parametrov1
         -- COD_SECCIONES = parametroINT1
         -- COD_JORNADA = parametroINT2
         elseif nombreTabla = 'RE_NIVACAD_ANIOACAD_SECCIONES' then
        -- FUNCIONES
         if funcion = 'I' then -- Insert.
			Insert into RE_NIVACAD_ANIOACAD_SECCIONES(COD_NIVACAD_ANIOACAD, COD_SECCIONES, COD_JORNADA) 
			values(parametrov1, parametroINT1, parametroINT2);
		elseif funcion = 'U' then -- Update.
			Update RE_NIVACAD_ANIOACAD_SECCIONES  set COD_NIVACAD_ANIOACAD = parametrov1, COD_SECCIONES = parametroINT1, COD_JORNADA = parametroINT2 where COD_REL_ANIOACAD= parametroBI;
		elseif funcion = 'SA' then -- Select all.
			Select * from RE_NIVACAD_ANIOACAD_SECCIONES;
		elseif funcion = 'SO' Then -- Select One.
			Select * from RE_NIVACAD_ANIOACAD_SECCIONES  where COD_REL_ANIOACAD = parametroBI;
		end if; -- END IF FUNCIONES
        -- FIN MA_SECCIONES 
        end if; -- end del if principal que que condiciona las tablas que va usar
        
Commit;
End ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SP_modulodocentes` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`axe`@`%` PROCEDURE `SP_modulodocentes`(
    IN nombreTabla VARCHAR(100),          -- Para verificar quÃ© tabla se va a utilizar en la condiciÃ³n
    IN funcion VARCHAR(2),                -- Para la funciÃ³n que se va a realizar en la condiciÃ³n
    IN parametroBI BIGINT,                -- ParÃ¡metro BIGINT
    IN parametroBI1 BIGINT,               -- ParÃ¡metro BIGINT 1
    IN parametroBI2 BIGINT,               -- ParÃ¡metro BIGINT 2
	IN parametroBI3 BIGINT,               -- ParÃ¡metro BIGINT 3
    IN parametroV1 VARCHAR (255),         -- ParÃ¡metro VARCHAR 1
    IN parametroV2 VARCHAR (100),         -- ParÃ¡metro VARCHAR 2 
    IN parametroV3 VARCHAR (50),           -- ParÃ¡metro VARCHAR 3
    IN PV_USUARIO VARCHAR(255)
)
BEGIN
   DECLARE error_message TEXT DEFAULT '';
    DECLARE sql_state VARCHAR(5) DEFAULT '';
    DECLARE message TEXT DEFAULT '';
    DECLARE error_code INT DEFAULT 0;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        GET STACKED DIAGNOSTICS CONDITION 1
            error_message = MESSAGE_TEXT,
            sql_state = RETURNED_SQLSTATE,
            error_code = MYSQL_ERRNO,
            message = MESSAGE_TEXT;

        ROLLBACK;
        INSERT INTO tabla_registro_errores (descripcion, codigo_error, fecha)
        VALUES (error_message, error_code, CURRENT_TIMESTAMP);
        RESIGNAL;
    END;

    START TRANSACTION;
    
    -- Tabla NÂº1 MD_DOCENTES

    -- COD_DOCENTE = ParÃ¡metro BIGINT
    -- COD_PERSONA = ParÃ¡metro BIGINT 1
    -- NOMBRE_DOCENTE  = parÃ¡metro VARCHAR 1
    -- ESPECIALIDAD = ParÃ¡metro VARCHAR 2
    -- GRADO_ENSENIANZA = ParÃ¡metro VARCHAR 3
    

    IF nombreTabla = 'MD_DOCENTES' THEN
        -- Funciones
        IF funcion = 'I' THEN -- Insertar.
            INSERT INTO MD_DOCENTES (COD_PERSONA, NOMBRE_DOCENTE, ESPECIALIDAD, GRADO_ENSENIANZA, USUARIO_MODIFICADOR)
            VALUES (parametroBI1, parametroV1, parametroV2, parametroV3, PV_USUARIO);
        ELSEIF funcion = 'U' THEN -- Actualizar.
            UPDATE MD_DOCENTES SET 
        
            NOMBRE_DOCENTE  = parametroV1,
            ESPECIALIDAD = parametroV2,
            GRADO_ENSENIANZA = parametroV3,
            USUARIO_MODIFICADOR = PV_USUARIO
            WHERE COD_DOCENTE = parametroBI;
        ELSEIF funcion = 'SA' THEN -- Seleccionar todos.
            SELECT * FROM MD_DOCENTES
            WHERE Estado_registro = 1;
        ELSEIF funcion = 'SO' THEN -- Seleccionar uno.
            SELECT * FROM MD_DOCENTES WHERE COD_DOCENTE = parametroBI;
         elseif funcion = 'DE' Then -- DELETE.
		UPDATE MD_DOCENTES SET Estado_registro = 0
	    WHERE  COD_DOCENTE = parametroBI;   
        END IF;
    -- Fin Tabla MD_DOCENTES


    -- Tabla NÂº2 MDA_DOCENTES_ASIGNATURAS

    -- COD_DOCENTE_ASIGNATURA = ParÃ¡metro BIGINT
    -- COD_ASIGNATURA = ParÃ¡metro BIGINT 1
    -- HORAS_SEMANALES = Parametro INT

    ELSEIF nombreTabla = 'MDA_DOCENTES_ASIGNATURAS' THEN
        -- Funciones
        IF funcion = 'I' THEN -- Insertar.
            INSERT INTO MDA_DOCENTES_ASIGNATURAS (COD_DOCENTE,COD_ASIGNATURA, HORAS_SEMANALES, USUARIO_MODIFICADOR)
            VALUES (parametroBI1, parametroBI2, parametroBI3, PV_USUARIO);
        ELSEIF funcion = 'U' THEN -- Actualizar.
            UPDATE MDA_DOCENTES_ASIGNATURAS SET 
            COD_ASIGNATURA = parametroBI1 ,
            HORAS_SEMANALES = parametroBI3,
            USUARIO_MODIFICADOR = PV_USUARIO
            WHERE COD_DOCENTE_ASIGNATURA = parametroBI;
        ELSEIF funcion = 'SA' THEN -- Seleccionar todos.
            SELECT * FROM MDA_DOCENTES_ASIGNATURAS
            WHERE Estado_registro = 1;
        ELSEIF funcion = 'SO' THEN -- Seleccionar uno.
            SELECT * FROM MDA_DOCENTES_ASIGNATURAS WHERE COD_DOCENTE_ASIGNATURA = parametroBI;
        elseif funcion = 'DE' Then -- DELETE.
		UPDATE MDA_DOCENTES_ASIGNATURAS SET Estado_registro = 0
	    WHERE  COD_DOCENTE_ASIGNATURA = parametroBI;    
        END IF;       -- End if funciones
    -- Fin Tabla MDA_DOCENTES_ASIGNATURAS    --
    END IF;            -- end del if principal que condiciona que tablas se va a usar


    COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SP_moduloEstudiantes` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`axe`@`%` PROCEDURE `SP_moduloEstudiantes`(
    in nombreTabla varchar(100),-- Para ver que tabla va usar el condicional
	in funcion VARCHAR(2),-- Para la funcion que va realizare condicional
	in parametroBI BIGINT,-- Parametro BIGINT
    in parametroINT1 bigint, -- Parametro entero 1
    in parametroV1 VARCHAR(255),-- Parametro varchar 1
	in parametroV2 VARCHAR(255),-- PArametro varchar 2
    in parametroV3 VARCHAR(255), -- Parametro varchar 3
    in parametroV4 VARCHAR(255), -- Parametro varchar 4
    in PV_USUARIO VARCHAR(255)
)
BEGIN
DECLARE error_message TEXT DEFAULT '';
    DECLARE sql_state VARCHAR(5) DEFAULT '';
    DECLARE message TEXT DEFAULT '';
    DECLARE error_code INT DEFAULT 0;
    
DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        GET STACKED DIAGNOSTICS CONDITION 1
            error_message = MESSAGE_TEXT,
            sql_state = RETURNED_SQLSTATE,
            error_code = MYSQL_ERRNO,
            message = MESSAGE_TEXT;

        ROLLBACK;
        INSERT INTO tabla_registro_errores (descripcion, codigo_error, fecha)
        VALUES (error_message, error_code, CURRENT_TIMESTAMP);
        RESIGNAL;
    END;
START TRANSACTION;

-- 1. Tabla PADRES_TUTORES 
       -- COD_PADRE_TUTOR = parametroBI,
       -- COD_PERSONA  = parametroINT1,
       -- NOMBRE_PADRE_TUTOR = parametrov1,
	   -- APELLIDO_PADRE_TUTOR = parametrov2,
       -- OCUPACION_PADRE_TUTOR = parametrov3,
       -- RELACION_PADRE_ESTUDIANTE = = parametrov4,
       -- USUARIO_MODIFICADOR = pv_usuario,
	
        if nombreTabla = 'ME_PADRES_TUTORES' then
        -- FUNCIONES
         if funcion = 'I' then -- Insert.
			Insert into ME_PADRES_TUTORES (COD_PERSONA, NOMBRE_PADRE_TUTOR, APELLIDO_PADRE_TUTOR,
            OCUPACION_PADRE_TUTOR,RELACION_PADRE_ESTUDIANTE, USUARIO_MODIFICADOR) 
			values(parametroINT1, parametrov1, parametrov2, parametrov3, parametrov4, PV_USUARIO);
           
		elseif funcion = 'UP' then -- Update.
            Update ME_PADRES_TUTORES set COD_PERSONA = parametroINT1, NOMBRE_PADRE_TUTOR = parametrov1, APELLIDO_PADRE_TUTOR = parametrov2, 
            OCUPACION_PADRE_TUTOR = parametrov3, RELACION_PADRE_ESTUDIANTE = parametrov4,  USUARIO_MODIFICADOR = PV_USUARIO where COD_PADRE_TUTOR = parametroBI;
	
		elseif funcion = 'SA' then -- Select all.
			Select * from ME_PADRES_TUTORES
            WHERE Estado_registro = 1;
		elseif funcion = 'SO' Then -- Select One.
			Select * from ME_PADRES_TUTORES where COD_PADRE_TUTOR = parametroBI;
            
		elseif funcion = 'DE' Then -- DELETE.
		UPDATE ME_PADRES_TUTORES SET Estado_registro = 0
	    WHERE  COD_PADRE_TUTOR = parametroBI;
        
		ELSE
        -- Acciones personalizadas para otras tablas o escenarios
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'FuniÃ³n NO VALIDA.';
		end if; -- END IF FUNCIONES
     -- FIN Tabla PADRES_TUTORES 
        end if; -- end del if principal que que condiciona las tablas que va usar
Commit;
End ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SP_MODULOMATRICUlA` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`axe`@`%` PROCEDURE `SP_MODULOMATRICUlA`(
    IN nombreTabla VARCHAR(100), -- Para ver quÃ© tabla va a usar el condicional
    IN funcion VARCHAR(2), -- Para la funciÃ³n que va a realizar el condicional
    IN parametroBI BIGINT, -- ParÃ¡metro BIGINT
    IN parametroINT1 BIGINT, -- ParÃ¡metro entero 1
    IN parametroINT2 BIGINT, -- ParÃ¡metro entero 2
    IN parametroINT3 BIGINT, -- ParÃ¡metro entero 
	
    IN parametroV1 VARCHAR(255), -- ParÃ¡metro varchar 1
    IN parametroV2 VARCHAR(255), -- ParÃ¡metro varchar 2
    IN parametroV3 VARCHAR(255), -- ParÃ¡metro varchar 3
    IN parametroINT4 BIGINT, -- ParÃ¡metro entero 
    IN PV_USUARIO VARCHAR(255),
    IN ENCARGADO VARCHAR(255)
)
BEGIN
    DECLARE error_message TEXT DEFAULT '';
    DECLARE sql_state VARCHAR(5) DEFAULT '';
    DECLARE message TEXT DEFAULT '';
    DECLARE error_code INT DEFAULT 0;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        GET STACKED DIAGNOSTICS CONDITION 1
            error_message = MESSAGE_TEXT,
            sql_state = RETURNED_SQLSTATE,
            error_code = MYSQL_ERRNO,
            message = MESSAGE_TEXT;

        ROLLBACK;
        INSERT INTO tabla_registro_errores (descripcion, codigo_error, fecha)
        VALUES (error_message, error_code, CURRENT_TIMESTAMP);
        RESIGNAL;
    END;

    START TRANSACTION;

    -- 1. Tabla Estudiantes
    IF nombreTabla = 'MM_MATRICULA' THEN
        IF funcion = 'I' THEN -- Insert.
            INSERT INTO MM_MATRICULA (COD_PERSONA, COD_NIVEL_ACADEMICO, COD_ANIO_ACADEMICO, FECHA_MATRICULA, ESTADO_MATRICULA, JORNADA, SECCION,COD_PADRE_TUTOR, USUARIO_MODIFICADOR,SEGUNDO_ENCARGADO)
            VALUES (parametroINT1, parametroINT2, parametroINT3, now(), parametroV1, parametroV2, parametroV3,parametroINT4, PV_USUARIO,ENCARGADO);

            SET @COD_MATRICULA = LAST_INSERT_ID(); -- AGUARDA EL ÃLTIMO DATO
        ELSEIF funcion = 'U' THEN -- Update.
            UPDATE MM_MATRICULA SET  COD_NIVEL_ACADEMICO = parametroINT2, COD_ANIO_ACADEMICO = parametroINT3, 
            ESTADO_MATRICULA = parametrov1, JORNADA = parametrov2, SECCION = parametrov3,COD_PADRE_TUTOR=parametroINT4, USUARIO_MODIFICADOR = PV_USUARIO, SEGUNDO_ENCARGADO = ENCARGADO WHERE COD_MATRICULA = parametroBI;
        ELSEIF funcion = 'SA' THEN -- Select all.
            SELECT * FROM MM_MATRICULA
			WHERE Estado_registro = 1;
        ELSEIF funcion = 'SO' THEN -- Select One.
            SELECT * FROM MM_MATRICULA WHERE COD_MATRICULA = parametroBI;
            
        elseif funcion = 'DE' Then -- DELETE.
		UPDATE MM_MATRICULA SET Estado_registro = 0
	    WHERE  COD_MATRICULA = parametroBI;    
        ELSE
            -- Acciones personalizadas para otras tablas o escenarios
            SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'FunciÃ³n NO VÃLIDA.';
        END IF;
    ELSE
        -- Acciones personalizadas para otras tablas o escenarios
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Tabla NO VÃLIDA.';
    END IF;

    COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SP_moduloseguridad` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`axe`@`%` PROCEDURE `SP_moduloseguridad`(
    in nombreTabla varchar(100),-- Para ver que tabla va usar el condicional
	in funcion VARCHAR(2),-- Para la funcion que va realizare condicional
	in parametroBI BIGINT,-- Parametro BIGINT
    IN parametroBI2 BIGINT,
    in parametroINT1 BIGINt, -- Parametro entero 1
    in parametroINT2 BIGINT, -- Parametro entero 2
	in parametroINT3 int,-- Parametro entero 3
	in parametroINT4 int, -- Parametro entero 4
    in parametroV1 VARCHAR(255),-- Parametro varchar 1
	in parametroV2 VARCHAR(255),-- PArametro varchar 2
    in parametroV3 VARCHAR(255)
)
Begin
START TRANSACTION;
	
-- Tabla Preguntas de seguridad
       -- COD_PREGUNTA = parametroBI  
       -- PREGUNTA = parametrov1 
       -- RESPUESTA = parametrov2
		if nombreTabla = 'MS_PREGUNTA_USUARIO' then
        -- funciones
        if funcion = 'I' then -- Insert.
			Insert into MS_PREGUNTA_USUARIO(PREGUNTA,RESPUESTA, COD_USUARIO) 
			values(parametrov1,parametrov2, parametroBI2);
		elseif funcion = 'U' then -- Update.
			Update MS_PREGUNTA_USUARIO set PREGUNTA = parametrov1, RESPUESTA = parametrov2  where COD_PREGUNTA = parametroBI;
		elseif funcion = 'SA' then -- Select all.
			Select * from MS_PREGUNTAS
            WHERE Estado_registro = 1;
		elseif funcion = 'SO' Then -- Select One.
        BEGIN 
			DECLARE VALOR_COD_USUARIO INT;
              -- SET VALOR_COD_USUARIO = (SELECT COD_USUARIO FROM MS_USUARIOS WHERE USUARIO = PV_USUARIO);
			SET VALOR_COD_USUARIO = (Select COD_USUARIO from MS_USUARIOS where USUARIO = parametroV1);
			Select * from MS_PREGUNTA_USUARIO where COD_USUARIO = VALOR_COD_USUARIO LIMIT 2;
		END;
	elseif funcion = 'DE' Then -- DELETE.
		UPDATE MS_PREGUNTAS SET Estado_registro = 0
	    WHERE  COD_PREGUNTA = parametroBI;
			
		end if; -- end if funciones
-- FIN Tabla Preguntas de seguridad

-- Tabla Estado usuario
       -- COD_ESTADO_USUARIO = parametroBI,
       -- DESCRIPCION = parametrov1
	
        elseif nombreTabla = 'MS_ESTADO_USUARIO' then
        -- FUNCIONES
         if funcion = 'I' then -- Insert.
			Insert into MS_ESTADO_USUARIO(DESCRIPCION,USUARIO_MODIFICADOR) 
			values(parametrov1,parametroV2);
		elseif funcion = 'U' then -- Update.
			Update MS_ESTADO_USUARIO set DESCRIPCION = parametrov1, USUARIO_MODIFICADOR = parametroV2 where COD_ESTADO_USUARIO = parametroBI;
		elseif funcion = 'SA' then -- Select all.
			Select * from MS_ESTADO_USUARIO
            WHERE Estado_registro = 1;
		elseif funcion = 'SO' Then -- Select One.
			Select * from MS_ESTADO_USUARIO where COD_ESTADO_USUARIO = parametroBI;
		elseif funcion = 'DE' Then -- DELETE.
		UPDATE MS_ESTADO_USUARIO SET Estado_registro = 0
	    WHERE  COD_ESTADO_USUARIO  = parametroBI;
		end if; -- END IF FUNCIONES
     -- FIN Tabla Estado usuario
        
        -- Tabla ROLES
    -- COD_ROL = parametroBI
    -- DESCRIPCION = parametrov1 
    -- FECHA_CREACION = parametroDATE1  
    -- FECHA_MODIFICACION = parametroDATE1
    -- MODIFICADO_POR = parametrov2
        elseif nombreTabla = 'MS_ROLES' then
        -- FUNCIONES
         if funcion = 'I' then -- Insert.
			Insert into MS_ROLES(DESCRIPCION, FECHA_CREACION, FECHA_MODIFICACION, MODIFICADO_POR) 
			values(parametrov1,curdate(), curdate(), parametrov2);
		  
		elseif funcion = 'U' then -- Update.
			Update MS_ROLES set DESCRIPCION = parametrov1 ,  FECHA_MODIFICACION = curdate(), MODIFICADO_POR = parametrov2 where COD_ROL = parametroBI;
		elseif funcion = 'SA' then -- Select all.
			Select * from MS_ROLES
            WHERE Estado_registro = 1;
		elseif funcion = 'SO' Then -- Select One.
			Select * from MS_ROLES where COD_ROL = parametroBI;
         elseif funcion = 'DE' Then -- DELETE.
		UPDATE MS_ROLES  SET Estado_registro = 0
	    WHERE  COD_ROL = parametroBI;   
		end if; -- END IF FUNCIONES
        -- FIN Tabla ROLES
        
        -- Tabla Permisos
   /*
    COD_PERMISO = parametroBI
    PERMISO_INSERCION = parametroTINYINT1,
    PERMISO_ELIMINACION = parametroTINYINT2,
    PERMISO_ACTUALIZACION = parametroTINYINT3,
    PERMISO_CONSULTAR = parametroTINYINT4,
    FECHA_CREACION = parametrodate,
    MODIFICADO_POR = parametroV1
    */
        elseif nombreTabla = 'MS_PERMISOS' then
        -- FUNCIONES
         if funcion = 'I' then -- Insert.
			Insert into MS_PERMISOS(PERMISO_INSERCION,PERMISO_ELIMINACION,PERMISO_ACTUALIZACION,PERMISO_CONSULTAR,FECHA_CREACION, MODIFICADO_POR) 
			values(parametroINT1,parametroINT2,parametroINT3,parametroINT4,curdate(),parametroV1);
		elseif funcion = 'U' then -- Update.
			Update MS_PERMISOS set  
            PERMISO_INSERCION = parametroINT1,
            PERMISO_ELIMINACION = parametroINT2,
            PERMISO_ACTUALIZACION = parametroINT3,
			PERMISO_CONSULTAR = parametroINT4,
            MODIFICADO_POR = parametroV1,
            Estado_registro = PI_EST_REGISTRO where  COD_PERMISO = parametroBI;
		elseif funcion = 'SA' then -- Select all.
			Select * from MS_PERMISOS
            WHERE Estado_registro = 1;
		elseif funcion = 'SO' Then -- Select One.
			Select * from MS_PERMISOS where COD_PERMISO = parametroBI;
		elseif funcion = 'DE' Then -- DELETE.
		UPDATE MS_PERMISOS SET Estado_registro = 0
	    WHERE  COD_PERMISO  = parametroBI;
		end if; -- END IF FUNCIONES
        -- FIN Tabla Permisos
     
               -- Tabla usuarios
   /*
    COD_USUARIO = parametroBI 
    USUARIO = parametroV1 , 
    CONTRASENA = parametroV2,
	PRIMER_INGRESO = parametroTINYINT1,
    MODIFICADO_POR = parametroV3,
	COD_PERSONA = parametroINT1,
    COD_ESTADO_USUARIO = parametroINT2
    COD_ROL = paramtroINT3
    */
        elseif nombreTabla = 'MS_USUARIOS' then
        -- FUNCIONES
         if funcion = 'I' then -- Insert.
			Insert into MS_USUARIOS(USUARIO,CONTRASENA,PRIMER_INGRESO,FECHA_CREACION,N_INTENTOS,MODIFICADO_POR,COD_PERSONA,COD_ESTADO_USUARIO, COD_ROL) 
			values(parametroV1,parametroV2,1 ,curdate(), 0,parametroV3,parametroINT1,parametroINT2, parametroBI2);
		elseif funcion = 'U' then -- Update.
			Update MS_USUARIOS set  
                USUARIO = parametroV1, 
                CONTRASENA = parametroV2,
                COD_ESTADO_USUARIO = parametroINT2
		       where  COD_USUARIO = parametroBI;
                elseif funcion = 'SA' then -- Select all.
			Select * from MS_USUARIOS;
		elseif funcion = 'SO' Then -- Select One.
			Select * from MS_USUARIOS where COD_USUARIO = parametroBI;
		elseif funcion = 'DE' Then -- DELETE.
		DELETE from MS_USUARIOS 
	    WHERE  COD_USUARIO = parametroBI;
        end if;
        -- FIN Tabla usuarios
        
        -- TABLA MS_REL_USUAROL
        /*
		COD_REL_USUARIO_ROL = parametroBI
        COD_USUARIO = parametroINT1,
        COD_ROL = parametroINT2 
        */
        elseif nombreTabla= 'MS_REL_USUAROL' then 
          -- FUNCIONES
          if funcion = 'I' then -- Insert.
			Insert into MS_REL_USUAROL(COD_USUARIO,COD_ROL) 
			values(parametroINT1,parametroINT2);
		  elseif funcion = 'U' then -- Update.
			Update MS_REL_USUAROL set 
            COD_ROL = parametroINT2 where COD_REL_USUARIO_ROL = parametroBI;
		  elseif funcion = 'SA' then -- Select all.
			Select * from MS_REL_USUAROL;
		   elseif funcion = 'SO' Then -- Select One.
			Select * from MS_REL_USUAROL where COD_REL_USUARIO_ROL = parametroBI;
		    end if; -- END IF FUNCIONES
           -- FINAL TABLA MS_REL_USUAROL
           
              -- TABLA MS_REL_ROLPERM
        /*
		COD_REL_USUARIO_ROL = parametroBI
        COD_PERMISO = parametroINT1,
        COD_ROL = parametroINT2 
        */
        elseif nombreTabla= 'MS_REL_ROLPERM' then 
          -- FUNCIONES
          if funcion = 'I' then -- Insert.
			Insert into MS_REL_ROLPERM(COD_PERMISO,COD_ROL) 
			values(parametroINT1,parametroINT2);
		  elseif funcion = 'U' then -- Update.
			Update MS_REL_ROLPERM set 
            COD_PERMISO = parametroINT1 where COD_RELPERM = parametroBI;
		  elseif funcion = 'SA' then -- Select all.
			Select * from MS_REL_ROLPERM;
		   elseif funcion = 'SO' Then -- Select One.
			Select * from MS_REL_ROLPERM where COD_RELPERM = parametroBI;
		    end if; -- END IF FUNCIONES
           -- FINAL TABLA MS_REL_ROLPERM
		
        -- TABLA MS_REL_PREGUNTAS_USUARIOS
        /*
		COD_PREGUNTAS_USUARIOS = parametroBI
        COD_USUARIO = parametroINT1,
        COD_PREGUNTA = parametroINT2 
        */
        elseif nombreTabla= 'MS_REL_PREGUNTAS_USUARIOS' then 
          -- FUNCIONES
          if funcion = 'I' then -- Insert.
			Insert into MS_REL_PREGUNTAS_USUARIOS(COD_USUARIO,COD_PREGUNTA) 
			values(parametroINT1,parametroINT2);
		  elseif funcion = 'U' then -- Update.
			Update MS_REL_PREGUNTAS_USUARIOS set 
            COD_PERMISO = parametroINT2 where COD_PREGUNTAS_USUARIOS = parametroBI;
		  elseif funcion = 'SA' then -- Select all.
			Select * from MS_REL_PREGUNTAS_USUARIOS;
		   elseif funcion = 'SO' Then -- Select One.
			Select * from MS_REL_PREGUNTAS_USUARIOS where COD_PREGUNTAS_USUARIOS = parametroBI;
		    end if; -- END IF FUNCIONES
           -- FINAL TABLA MS_REL_ROLPERM
           
          
           
        end if; -- end del if principal que que condiciona las tablas que va usar
	
Commit;
End ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SP_MostrarBitacora` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`axe`@`%` PROCEDURE `SP_MostrarBitacora`(
IN funcion VARCHAR(2), 
IN p_cod_bitacora BIGINT)
BEGIN
    IF funcion = 'SA' THEN
        -- Select all.
        SELECT * FROM BITACORA ORDER BY FECHA_MODIFICACION DESC;
        -- Select one.
    ELSEIF funcion = 'SO' THEN
        -- Select One.
        SELECT * FROM BITACORA WHERE COD_BITACORA = p_cod_bitacora;
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SP_MP_PERSONAS` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`axe`@`%` PROCEDURE `SP_MP_PERSONAS`(
    IN nombreTabla VARCHAR(100),
    IN funcion VARCHAR(2),
    IN parametroBI BIGINT,
    IN parametroBI2 BIGINT,
    IN parametroV1 VARCHAR(255),
    IN parametroV2 VARCHAR(255),
    IN parametroV3 VARCHAR(255),
    IN parametroV4 VARCHAR(255),
    IN parametroV5 VARCHAR(255),
    IN parametroINT1 INT, 
    IN parametroD1 DATE,
	IN PV_USUARIO VARCHAR(255)
)
BEGIN
    DECLARE error_message TEXT DEFAULT '';
    DECLARE sql_state VARCHAR(5) DEFAULT '';
    DECLARE message TEXT DEFAULT '';
    DECLARE error_code INT DEFAULT 0;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        GET STACKED DIAGNOSTICS CONDITION 1
            error_message = MESSAGE_TEXT,
            sql_state = RETURNED_SQLSTATE,
            error_code = MYSQL_ERRNO,
            message = MESSAGE_TEXT;

        ROLLBACK;
        INSERT INTO tabla_registro_errores (descripcion, codigo_error, fecha)
        VALUES (error_message, error_code, CURRENT_TIMESTAMP);
        RESIGNAL;
    END;

    START TRANSACTION;
    
    -- Tabla MP_PERSONAS
    IF nombreTabla = 'MP_PERSONAS' THEN
        IF funcion = 'I' THEN -- Insertar
            INSERT INTO MP_PERSONAS (NOMBRE, APELLIDO, IDENTIDAD, GENERO, TIPO_PERSONA, EDAD, FECHA_NACIMIENTO, FECHA_REGISTRO, USUARIO_MODIFICADOR)
            VALUES (parametroV1, parametroV2, parametroV3, parametroV4, parametroV5, parametroINT1, parametroD1, CURDATE(), PV_USUARIO);
        ELSEIF funcion = 'U' THEN -- Actualizar
            UPDATE MP_PERSONAS
            SET NOMBRE = parametroV1,
                APELLIDO = parametroV2,
                IDENTIDAD = parametroV3,
                GENERO = parametroV4, 
                TIPO_PERSONA = parametroV5, 
                EDAD = parametroINT1, 
                FECHA_NACIMIENTO = parametroD1
             
                
            WHERE COD_PERSONA = parametroBI;
        ELSEIF funcion = 'SA' THEN -- Seleccionar todos
            SELECT * FROM MP_PERSONAS
            WHERE Estado_registro = 1;
	ELSEIF funcion = 'SO' THEN
SELECT M_PER.NOMBRE,  M_PER.APELLIDO,  M_PER.IDENTIDAD,  M_PER.GENERO,  M_PER.EDAD,  M_PER.FECHA_NACIMIENTO, 
M_TEL.TELEFONO, M_TEL.TIPO_TELEFONO,
M_DIR.DIRECCION, M_DIR.DEPARTAMENTO, M_DIR.CIUDAD, M_DIR.PAIS,
M_CORR.CORREO_ELECTRONICO,
M_CONT_E.NOMBRE_CONTACTO, M_CONT_E.APELLIDO_CONTACTO, M_CONT_E.TELEFONO, M_CONT_E.RELACION
FROM MP_PERSONAS M_PER
INNER JOIN MP_TELEFONOS M_TEL
ON M_PER.COD_PERSONA = M_TEL.COD_PERSONA 
INNER JOIN MP_DIRECCIONES M_DIR
ON M_PER.COD_PERSONA = M_DIR.COD_PERSONA 
INNER JOIN MP_CORREOS M_CORR
ON M_PER.COD_PERSONA = M_CORR.COD_PERSONA 
INNER JOIN MP_CONTACTOS_EMERGENCIA M_CONT_E
ON M_PER.COD_PERSONA = M_CONT_E.COD_PERSONA
where M_PER.COD_PERSONA=parametroBI; 
 elseif funcion = 'DE' Then -- DELETE.
		UPDATE MP_PERSONAS SET Estado_registro = 0
	    WHERE  COD_PERSONA = parametroBI;
    END IF;
    END IF;
    -- Tabla MP_TELEFONOS
    IF nombreTabla = 'MP_TELEFONOS' THEN
        IF funcion = 'I' THEN -- Insertar
            INSERT INTO MP_TELEFONOS (COD_PERSONA, TELEFONO, TIPO_TELEFONO, FECHA, USUARIO_MODIFICADOR)
            VALUES (parametroBI, parametroV1, parametroV2, CURDATE(),PV_USUARIO);
        ELSEIF funcion = 'U' THEN -- Actualizar
            UPDATE MP_TELEFONOS
            SET COD_PERSONA = parametroBI2, 
               TELEFONO = parametroV1,
                TIPO_TELEFONO = parametroV2,
                USUARIO_MODIFICADOR = PV_USUARIO
             
            WHERE COD_TELEFONO = parametroBI;
        ELSEIF funcion = 'SA' THEN -- Seleccionar todos
            SELECT * FROM MP_TELEFONOS
            WHERE Estado_registro = 1;
        ELSEIF funcion = 'SO' THEN -- Seleccionar uno
            SELECT * FROM MP_TELEFONOS WHERE COD_TELEFONO = parametroBI;
            
		elseif funcion = 'DE' Then -- DELETE.
		UPDATE MP_TELEFONOS SET Estado_registro = 0
	    WHERE  COD_TELEFONO = parametroBI;
        END IF;
    END IF;

    -- Tabla MP_DIRECCIONES
    IF nombreTabla = 'MP_DIRECCIONES' THEN
        IF funcion = 'I' THEN -- Insertar
            INSERT INTO MP_DIRECCIONES (COD_PERSONA, DIRECCION, DEPARTAMENTO, CIUDAD, PAIS, FECHA, USUARIO_MODIFICADOR)
            VALUES (parametroBI, parametroV1, parametroV2, parametroV3, parametroV4, CURDATE(), PV_USUARIO);
        ELSEIF funcion = 'U' THEN -- Actualizar
            UPDATE MP_DIRECCIONES
            SET COD_PERSONA = parametroBI2,
            DIRECCION = parametroV1,
                DEPARTAMENTO = parametroV2,
                CIUDAD = parametroV3,
                PAIS = parametroV4,
                USUARIO_MODIFICADOR = PV_USUARIO
            WHERE COD_DIRECCION = parametroBI;
        ELSEIF funcion = 'SA' THEN -- Seleccionar todos
            SELECT * FROM MP_DIRECCIONES
            WHERE Estado_registro = 1;
        ELSEIF funcion = 'SO' THEN -- Seleccionar uno
            SELECT * FROM MP_DIRECCIONES WHERE COD_DIRECCION = parametroBI;
            
         elseif funcion = 'DE' Then -- DELETE.
		UPDATE MP_DIRECCIONES SET Estado_registro = 0
	    WHERE  COD_DIRECCION = parametroBI;   
        END IF;
    END IF;

    -- Tabla MP_CORREOS
    IF nombreTabla = 'MP_CORREOS' THEN
        IF funcion = 'I' THEN -- Insertar
            INSERT INTO MP_CORREOS (COD_PERSONA, CORREO_ELECTRONICO, FECHA, USUARIO_MODIFICADOR)
            VALUES (parametroBI, parametroV1, CURDATE(), PV_USUARIO);
        ELSEIF funcion = 'U' THEN -- Actualizar
            UPDATE MP_CORREOS
            SET COD_PERSONA = parametroBI2,
               CORREO_ELECTRONICO = parametroV1,
                USUARIO_MODIFICADOR = PV_USUARIO
            WHERE COD_CORREO = parametroBI;
        ELSEIF funcion = 'SA' THEN -- Seleccionar todos
            SELECT * FROM MP_CORREOS
            WHERE Estado_registro = 1;
        ELSEIF funcion = 'SO' THEN -- Seleccionar uno
            SELECT * FROM MP_CORREOS WHERE COD_CORREO = parametroBI;
            
        elseif funcion = 'DE' Then -- DELETE.
		UPDATE MP_CORREOS SET Estado_registro = 0
	    WHERE  COD_CORREO = parametroBI;    
        END IF;
    END IF;

    -- Tabla MP_CONTACTOS_EMERGENCIA
    IF nombreTabla = 'MP_CONTACTOS_EMERGENCIA' THEN
        IF funcion = 'I' THEN -- Insertar
            INSERT INTO MP_CONTACTOS_EMERGENCIA (COD_PERSONA, NOMBRE_CONTACTO, APELLIDO_CONTACTO, TELEFONO, RELACION, FECHA, USUARIO_MODIFICADOR)
            VALUES (parametroBI, parametroV1, parametroV2, parametroV3, parametroV4, CURDATE(), PV_USUARIO);
        ELSEIF funcion = 'U' THEN -- Actualizar
            UPDATE MP_CONTACTOS_EMERGENCIA
            SET COD_PERSONA = parametroBI2,
            NOMBRE_CONTACTO = parametroV1,
                APELLIDO_CONTACTO = parametroV2,
                TELEFONO = parametroV3,
                RELACION = parametroV4,
                USUARIO_MODIFICADOR = PV_USUARIO
            WHERE COD_CONTACTO_EMERGENCIA = parametroBI;
        ELSEIF funcion = 'SA' THEN -- Seleccionar todos
            SELECT * FROM MP_CONTACTOS_EMERGENCIA
            WHERE Estado_registro = 1;
        ELSEIF funcion = 'SO' THEN -- Seleccionar uno
            SELECT * FROM MP_CONTACTOS_EMERGENCIA WHERE COD_CONTACTO_EMERGENCIA = parametroBI;
            
        elseif funcion = 'DE' Then -- DELETE.
		UPDATE MP_CONTACTOS_EMERGENCIA SET Estado_registro = 0
	    WHERE  COD_CONTACTO_EMERGENCIA = parametroBI;    
        END IF;
    END IF;

    COMMIT;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SP_MS_ESTADO_ROLES` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`axe`@`%` PROCEDURE `SP_MS_ESTADO_ROLES`(
    IN nombreTabla VARCHAR(100), -- Para verificar quÃ© tabla se usarÃ¡ en la condiciÃ³n
    IN funcion VARCHAR(2), -- Para la funciÃ³n que se realizarÃ¡ en la condiciÃ³n
    IN parametroBI BIGINT, -- ParÃ¡metro BIGINT
    IN parametroV1 VARCHAR(255), -- ParÃ¡metro varchar 1
    IN parametroV2 VARCHAR(255) -- ParÃ¡metro varchar 2
)
BEGIN
    IF nombreTabla = 'MS_ESTADO_ROLES' THEN
        -- FUNCIONES
        IF funcion = 'I' THEN -- Insertar
            INSERT INTO MS_ESTADO_ROLES (DESCRIPCION, USUARIO_MODIFICADOR) 
            VALUES (parametroV1, parametroV2);
        ELSEIF funcion = 'U' THEN -- Update
            UPDATE MS_ESTADO_ROLES SET DESCRIPCION = parametroV1, USUARIO_MODIFICADOR = parametroV2 WHERE COD_ESTADO_ROL = parametroBI;
        ELSEIF funcion = 'SA' THEN -- Select all
            SELECT * FROM MS_ESTADO_ROLES WHERE Estado_registro = 1;
        ELSEIF funcion = 'SO' THEN -- Select One
            SELECT * FROM MS_ESTADO_ROLES WHERE COD_ESTADO_ROL = parametroBI;
        ELSEIF funcion = 'DE' THEN -- DELETE
            UPDATE MS_ESTADO_ROLES SET Estado_registro = 0 WHERE COD_ESTADO_ROL = parametroBI;
        END IF; -- END IF FUNCIONES
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SP_MS_OBJETOS` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`axe`@`%` PROCEDURE `SP_MS_OBJETOS`(
    IN pCodigoObjeto INT,
    IN pObjeto VARCHAR(255),
    IN pDescripcion TEXT,
    IN pTipoObjeto VARCHAR(50),
    IN pOperacion VARCHAR(10)
)
BEGIN
    -- Mostrar todos los objetos
    IF pOperacion = 'SA' THEN
        SELECT * FROM MS_OBJETOS where Estado_registro = 1;
    
    -- Mostrar un objeto por su cÃ³digo
    ELSEIF pOperacion = 'SP' THEN
        SELECT * FROM MS_OBJETOS WHERE COD_OBJETO = pCodigoObjeto;
    
    -- Editar un objeto existente
    ELSEIF pOperacion = 'U' THEN
        UPDATE MS_OBJETOS
        SET OBJETO = pObjeto,
            DESCRIPCION = pDescripcion,
            TIPO_OBJETO = pTipoObjeto
        WHERE COD_OBJETO = pCodigoObjeto;
    
    -- Insertar un nuevo objeto
    ELSEIF pOperacion = 'I' THEN
        INSERT INTO MS_OBJETOS (OBJETO, DESCRIPCION, TIPO_OBJETO)
        VALUES (pObjeto, pDescripcion, pTipoObjeto);
  -- eliminar
    ELSEIF pOperacion = 'DE' THEN -- DELETE.
       UPDATE MS_OBJETOS SET Estado_registro = 0
       WHERE COD_OBJETO = pCodigoObjeto;    

    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SP_MS_PARAMETROS` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`axe`@`%` PROCEDURE `SP_MS_PARAMETROS`(
    IN operacion VARCHAR(2),
    INOUT codigo INT,
    IN nombre_parametro VARCHAR(255),
    IN valor_parametro VARCHAR(255),
    IN usuario VARCHAR(255)
)
BEGIN
    -- Variable para manejar el mensaje de salida
    DECLARE mensaje VARCHAR(255);

    -- OperaciÃ³n de selecciÃ³n (mostrar)
    IF operacion = 'SA' THEN
	SELECT * FROM MS_PARAMETROS WHERE Estado_registro = 1;
    

    -- OperaciÃ³n de inserciÃ³n
    ELSEIF operacion = 'I' THEN
        INSERT INTO MS_PARAMETROS (PARAMETRO, VALOR, USUARIO, FECHA_CREADO, FECHA_MODIFICADO)
        VALUES (nombre_parametro, valor_parametro, usuario, NOW(), NOW());

		SET codigo = LAST_INSERT_ID();  -- Devuelve el ID del Ãºltimo registro insertado
        SET mensaje = 'InserciÃ³n exitosa';
    
    -- OperaciÃ³n de actualizaciÃ³n
    ELSEIF operacion = 'U' THEN
        UPDATE MS_PARAMETROS
        SET PARAMETRO = nombre_parametro,
            VALOR = valor_parametro,
            USUARIO = usuario,
            FECHA_MODIFICADO = NOW()
        WHERE COD_PARAMETRO = codigo;

        SET mensaje = 'ActualizaciÃ³n exitosa';
    
    ELSEIF operacion = 'DE' THEN -- DELETE.
       UPDATE MS_PARAMETROS SET Estado_registro = 0
       WHERE COD_PARAMETRO = codigo;    

    -- OperaciÃ³n no vÃ¡lida
    ELSE
        SET mensaje = 'OperaciÃ³n no vÃ¡lida';
    END IF;
   
    -- Mostrar el mensaje de salida
    SELECT mensaje AS Mensaje;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SP_MS_PARAMETROS1` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`axe`@`%` PROCEDURE `SP_MS_PARAMETROS1`(
    IN accion VARCHAR(2), -- Puede ser 'mostrar', 'insertar' o 'editar'
    IN codigo INT,          -- CÃ³digo de la pregunta (para editar)
    IN nuevo_parametros VARCHAR(255), -- Nuevo texto de la pregunta (para insertar o editar)
    IN valor_para VARCHAR(255),
    IN usuarioP VARCHAR(255)
)
BEGIN
    IF accion = 'SA' THEN
        -- Mostrar todos los datos de la tabla
        SELECT * FROM MS_PARAMETROS;
        
    ELSEIF accion = 'I' THEN
        -- Insertar un nuevo registro
        INSERT INTO MS_PARAMETROS (PARAMETRO, VALOR, USUARIO, FECHA_CREADO, FECHA_MODIFICADO)
        VALUES (nuevo_parametros,valor_para,usuarioP,NOW(),NOW());
    ELSEIF accion = 'U' THEN
        -- Editar una pregunta existente por su cÃ³digo
        UPDATE MS_PARAMETROS 
        SET PARAMETRO = nuevo_parametros,
			VALOR = valor_para,
            USUARIO = usuarioP
        WHERE COD_PARAMETRO = codigo;
        
    ELSE
        -- AcciÃ³n no vÃ¡lida
        SELECT 'AcciÃ³n no vÃ¡lida' AS Resultado;
        
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SP_MS_PARAMETROS_PREGUNTAS` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`axe`@`%` PROCEDURE `SP_MS_PARAMETROS_PREGUNTAS`(
)
BEGIN
   SELECT VALOR FROM MS_PARAMETROS WHERE PARAMETRO = 'PREGUNTAS_SEGURIDAD';
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SP_MS_PERMISOS_USUARIOS` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`axe`@`%` PROCEDURE `SP_MS_PERMISOS_USUARIOS`(
	PV_FUNCION VARCHAR(100),
	PV_USUARIO VARCHAR(100),
    PV_OBJETO VARCHAR(100)
)
BEGIN 
	IF PV_FUNCION = 'SO' THEN
		SELECT ROL_PERM.PERMISO_CONSULTAR, ROL_PERM.PERMISO_INSERCION, ROL_PERM.PERMISO_ELIMINACION, ROL_PERM.PERMISO_ACTUALIZACION 
		FROM MS_ROLES_PERMISOS ROL_PERM
		INNER JOIN MS_ROLES ROL
		ON ROL_PERM.COD_ROL = ROL.COD_ROL
		INNER JOIN MS_OBJETOS OBJETO
		ON ROL_PERM.COD_OBJETO = OBJETO.COD_OBJETO
		INNER JOIN MS_USUARIOS USUARIO
		ON ROL.COD_ROL = USUARIO.COD_ROL
		WHERE USUARIO.USUARIO = PV_USUARIO AND OBJETO.OBJETO = PV_OBJETO; 
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SP_MS_PREGUNTAS` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`axe`@`%` PROCEDURE `SP_MS_PREGUNTAS`(
    IN accion VARCHAR(10), -- Puede ser 'mostrar', 'insertar' o 'editar'
    IN codigo INT,          -- CÃ³digo de la pregunta (para editar)
    IN nueva_pregunta VARCHAR(255) -- Nuevo texto de la pregunta (para insertar o editar)
)
BEGIN
    IF accion = 'mostrar' THEN
        -- Mostrar todos los datos de la tabla
        SELECT * FROM MS_PREGUNTAS where Estado_registro = 1;
        
    ELSEIF accion = 'I' THEN
        -- Insertar un nuevo registro
        INSERT INTO MS_PREGUNTAS (PREGUNTA) VALUES (nueva_pregunta);
        
    ELSEIF accion = 'U' THEN
        -- Editar una pregunta existente por su cÃ³digo
        UPDATE MS_PREGUNTAS SET PREGUNTA = nueva_pregunta WHERE COD_PREGUNTA = codigo;
	
    ELSEIF accion = 'DE' THEN -- DELETE.
       UPDATE MS_PREGUNTAS SET Estado_registro = 0
       WHERE COD_PREGUNTA =  codigo; 
    
    ELSE
        -- AcciÃ³n no vÃ¡lida
        SELECT 'AcciÃ³n no vÃ¡lida' AS Resultado;
        
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SP_MS_PREGUNTAS_SEGURIDAD` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`axe`@`%` PROCEDURE `SP_MS_PREGUNTAS_SEGURIDAD`(
   IN PV_USUARIO VARCHAR(50)
)
BEGIN
-- 1 SI 0 NO
 DECLARE VALOR_COD_USUARIO INT;
    
	SET VALOR_COD_USUARIO = (SELECT COD_USUARIO FROM MS_USUARIOS WHERE USUARIO = PV_USUARIO);
    
    SELECT * FROM MS_PREGUNTAS
	WHERE COD_PREGUNTA NOT IN(SELECT COD_PREGUNTA FROM MS_REL_PREGUNTA_USUARIO WHERE COD_USUARIO = VALOR_COD_USUARIO);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SP_MS_PREGUNTAS_SEG_USUARIO` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`axe`@`%` PROCEDURE `SP_MS_PREGUNTAS_SEG_USUARIO`(
   IN PV_USUARIO VARCHAR(100)
)
BEGIN
	SELECT PREG.PREGUNTA, REL_PREG_USUAR.RESPUESTA, USUA.USUARIO  FROM MS_REL_PREGUNTA_USUARIO REL_PREG_USUAR
	INNER JOIN MS_PREGUNTAS PREG
	ON REL_PREG_USUAR.COD_PREGUNTA = PREG.COD_PREGUNTA
	INNER JOIN MS_USUARIOS USUA
	ON REL_PREG_USUAR.COD_USUARIO = USUA.COD_USUARIO
	WHERE USUA.USUARIO = PV_USUARIO;
    
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SP_MS_ROLES_PERMISOS` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`axe`@`%` PROCEDURE `SP_MS_ROLES_PERMISOS`(
	IN PV_FUNCION VARCHAR(100),
    IN PI_COD_ROL_OBJETO INT,
	IN PI_COD_ROL INT,
	IN PI_COD_OBJETO INT,
	IN PI_PERMISO_INSERCION INT,
    IN PI_PERMISO_ELIMINACION INT,
    IN PI_PERMISO_ACTUALIZACION INT,
    IN PI_PERMISO_CONSULTAR INT,
    IN PV_MODIFICADO VARCHAR(255)
)
BEGIN
	IF PV_FUNCION = 'SA' THEN
		SELECT COD_ROL_OBJETO, COD_ROL, COD_OBJETO, PERMISO_INSERCION, PERMISO_ELIMINACION, PERMISO_ACTUALIZACION, PERMISO_CONSULTAR
		FROM MS_ROLES_PERMISOS
        WHERE Estado_registro = 1;
        
	ELSEIF PV_FUNCION = 'I' THEN
		INSERT INTO MS_ROLES_PERMISOS(COD_ROL, COD_OBJETO, PERMISO_INSERCION, PERMISO_ELIMINACION, PERMISO_ACTUALIZACION, PERMISO_CONSULTAR, FECHA_CREACION,MODIFICADO_POR)
        VALUES(PI_COD_ROL, PI_COD_OBJETO, PI_PERMISO_INSERCION, PI_PERMISO_ELIMINACION, PI_PERMISO_ACTUALIZACION, PI_PERMISO_CONSULTAR, curdate(), PV_MODIFICADO);
        
	ELSEIF PV_FUNCION = 'U' THEN
		UPDATE MS_ROLES_PERMISOS
		SET 
			COD_ROL = PI_COD_ROL,
			COD_OBJETO = PI_COD_OBJETO,
			PERMISO_INSERCION = PI_PERMISO_INSERCION,
			PERMISO_ELIMINACION = PI_PERMISO_ELIMINACION,
			PERMISO_ACTUALIZACION = PI_PERMISO_ACTUALIZACION,
			PERMISO_CONSULTAR = PI_PERMISO_CONSULTAR,
            MODIFICADO_POR = PV_MODIFICADO
		WHERE COD_ROL_OBJETO = PI_COD_ROL_OBJETO;
        
	ELSEIF PV_FUNCION = 'DE' THEN
		UPDATE MS_ROLES_PERMISOS
		SET Estado_registro = 0
		WHERE COD_ROL_OBJETO = PI_COD_ROL_OBJETO;
    END IF;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SP_PREGUNTAS_USUARIO` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_0900_ai_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`axe`@`%` PROCEDURE `SP_PREGUNTAS_USUARIO`(
   IN PV_USUARIO VARCHAR(100)
)
BEGIN

	SELECT TB_USUA.USUARIO, TB_PREG.PREGUNTA, TB_INTER.RESPUESTA FROM MS_REL_PREGUNTA_USUARIO TB_INTER
	INNER JOIN MS_USUARIOS TB_USUA
	ON  TB_INTER.COD_USUARIO = TB_USUA.COD_USUARIO
	INNER JOIN MS_PREGUNTAS TB_PREG
	ON  TB_INTER.COD_PREGUNTA = TB_PREG.COD_PREGUNTA
	WHERE TB_USUA.USUARIO = PV_USUARIO ;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2023-12-02  0:27:41
